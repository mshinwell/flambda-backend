;**************************************************************************
;*                                                                        *
;*                                 OCaml                                  *
;*                                                                        *
;*            Thomas Refis and Mark Shinwell, Jane Street Europe          *
;*                                                                        *
;*   Copyright 2018--2020 Jane Street Group LLC                           *
;*                                                                        *
;*   All rights reserved.  This file is distributed under the terms of    *
;*   the GNU Lesser General Public License version 2.1, with the          *
;*   special exception on linking described in the file LICENSE.          *
;*                                                                        *
;**************************************************************************

(env
 (dev     (flags (:standard -w +a-4-9-40-41-42-44-45-48)))
 (release (flags (:standard -w +a-4-9-40-41-42-44-45-48))))

;; Too annoying to get to work. Use (copy_files# ...) instead
; (include_subdirs unqualified)
; (ignored_subdirs (lex yacc testsuite ocamldoc ocamltest toplevel otherlibs))

(copy_files# utils/*.ml{,i})
(copy_files# parsing/*.ml{,i})
(copy_files# typing/*.ml{,i})
(copy_files# bytecomp/*.ml{,i})
(copy_files# driver/*.ml{,i})
;(copy_files# asmcomp/*.ml{,i})
;(copy_files# asmcomp/debug/*.ml{,i})
(copy_files# file_formats/*.ml{,i})
(copy_files# lambda/*.ml{,i})
;(copy_files# middle_end/*.ml{,i})
;(copy_files# middle_end/closure/*.ml{,i})
;(copy_files# middle_end/flambda/*.ml{,i})
;(copy_files# middle_end/flambda/base_types/*.ml{,i})

(library
 (name ocamlcommon)
 (wrapped false)
 (flags (:standard -principal -nostdlib))
 (library_flags -linkall)
 (libraries stdlib)
 (modules_without_implementation
   annot asttypes cmo_format outcometree parsetree debug_event)
 (modules
   ;; UTILS
   config build_path_prefix_map misc identifiable numbers arg_helper clflags
   profile terminfo ccomp warnings consistbl strongly_connected_components
   targetint load_path int_replace_polymorphic_compare domainstate

   ;; PARSING
   location longident docstrings syntaxerr ast_helper camlinternalMenhirLib
   parser lexer parse printast pprintast ast_mapper ast_iterator attr_helper
   builtin_attributes ast_invariants depend
   ; manual update: mli only files
   asttypes parsetree

   ;; TYPING
   ident path primitive types btype oprint subst predef datarepr
   cmi_format persistent_env env type_immediacy
   typedtree printtyped ctype printtyp includeclass mtype envaux includecore
   tast_iterator tast_mapper cmt_format untypeast includemod
   typetexp printpat parmatch stypes typedecl typeopt rec_check typecore
   typeclass typemod typedecl_variance typedecl_properties typedecl_immediacy
   typedecl_unboxed typedecl_separability cmt2annot
   ; manual update: mli only files
   annot outcometree

   ;; lambda/
   debuginfo lambda matching printlambda runtimedef simplif switch
   translattribute translclass translcore translmod translobj translprim

   ;; bytecomp/
   debug_event meta opcodes bytesections dll symtable

   ;; some of COMP
   pparse main_args compenv compmisc makedepend compile_common
   ; manual update: mli only files
   cmo_format
 ))

(library
 (name ocamlbytecomp)
 (wrapped false)
 (flags (:standard -principal -nostdlib))
 (libraries stdlib ocamlcommon)
 ; The bytecode system needs export-dynamic capabilities analogous to those
 ; required for natdynlink.
 (library_flags (:include ocamlbytecomp_library_flags.sexp))
 (modules
    ;; bytecomp/
    bytegen bytelibrarian bytelink bytepackager emitcode instruct printinstr

    ;; driver/
    errors compile
 ))

; Resurrecting this will require having some way of modules being present in
; more than one library.
;(library
; (name ocamlmiddleend)
; (wrapped false)
; (flags (:standard -principal -nostdlib))
; (libraries stdlib ocamlcommon)
; (modules_without_implementation
;   cmx_format cmxs_format backend_intf inlining_decision_intf
;   simplify_boxed_integer_ops_intf)
; (modules
;   ;; file_formats/
;   cmx_format cmxs_format
;
;   ;; middle_end/
;   backend_intf backend_var backend_var clambda clambda_primitives
;   compilation_unit compilenv convert_primitives internal_variable_names
;   linkage_name printclambda printclambda_primitives semantics_of_primitives
;   symbol variable
;
;   ;; middle_end/closure/
;   closure closure_middle_end
;
;   ;; middle_end/flambda/base_types/
;   closure_element closure_id closure_origin export_id id_types mutable_variable
;   set_of_closures_id set_of_closures_origin static_exception tag
;   var_within_closure
;
;   ;; middle_end/flambda/
;   alias_analysis allocated_const augment_specialised_args build_export_info
;   closure_conversion closure_conversion_aux closure_offsets effect_analysis
;   export_info export_info_for_pack extract_projections find_recursive_functions
;   flambda flambda_invariants flambda_iterators flambda_middle_end
;   flambda_to_clambda flambda_utils freshening import_approx inconstant_idents
;   initialize_symbol_to_let_symbol inline_and_simplify inline_and_simplify_aux
;   inlining_cost inlining_decision inlining_decision_intf inlining_stats
;   inlining_stats_types inlining_transforms invariant_params lift_code
;   lift_constants lift_let_to_initialize_symbol parameter pass_wrapper
;   projection ref_to_variables remove_free_vars_equal_to_args
;   remove_unused_arguments remove_unused_closure_vars
;   remove_unused_program_constructs share_constants simple_value_approx
;   simplify_boxed_integer_ops simplify_boxed_integer_ops_intf simplify_common
;   simplify_primitives traverse_for_exported_symbols un_anf unbox_closures
;   unbox_free_vars_of_closures unbox_specialised_args
; )
;)

; For the moment this is commented to ensure that everything uses the code
; from the toplevel backend/ and middle_end/ dirs.
;(library
; (name ocamloptcomp)
; (wrapped false)
; (flags (:standard -principal -nostdlib))
; (libraries stdlib ocamlcommon)
; (modules_without_implementation x86_ast
;   cmx_format cmxs_format backend_intf inlining_decision_intf
;   simplify_boxed_integer_ops_intf)
; (modules
;   ;; To match the Makefiles, ocamloptcomp needs to include ocamlmiddleend.
;
;   ;; file_formats/
;   cmx_format cmxs_format
;
;   ;; middle_end/
;   backend_intf backend_var backend_var clambda clambda_primitives
;   compilation_unit compilenv convert_primitives internal_variable_names
;   linkage_name printclambda printclambda_primitives semantics_of_primitives
;   symbol variable
;
;   ;; middle_end/closure/
;   closure closure_middle_end
;
;   ;; middle_end/flambda/base_types/
;   closure_element closure_id closure_origin export_id id_types mutable_variable
;   set_of_closures_id set_of_closures_origin static_exception tag
;   var_within_closure
;
;   ;; middle_end/flambda/
;   alias_analysis allocated_const augment_specialised_args build_export_info
;   closure_conversion closure_conversion_aux closure_offsets effect_analysis
;   export_info export_info_for_pack extract_projections find_recursive_functions
;   flambda flambda_invariants flambda_iterators flambda_middle_end
;   flambda_to_clambda flambda_utils freshening import_approx inconstant_idents
;   initialize_symbol_to_let_symbol inline_and_simplify inline_and_simplify_aux
;   inlining_cost inlining_decision inlining_decision_intf inlining_stats
;   inlining_stats_types inlining_transforms invariant_params lift_code
;   lift_constants lift_let_to_initialize_symbol parameter pass_wrapper
;   projection ref_to_variables remove_free_vars_equal_to_args
;   remove_unused_arguments remove_unused_closure_vars
;   remove_unused_program_constructs share_constants simple_value_approx
;   simplify_boxed_integer_ops simplify_boxed_integer_ops_intf simplify_common
;   simplify_primitives traverse_for_exported_symbols un_anf unbox_closures
;   unbox_free_vars_of_closures unbox_specialised_args
;
;   ;; asmcomp/
;   afl_instrument arch asmgen asmlibrarian asmlink asmpackager branch_relaxation
;   branch_relaxation_intf cmm_helpers cmm cmmgen cmmgen_state coloring comballoc
;   CSE CSEgen deadcode emit emitaux interf interval linear linearize linscan
;   liveness mach printcmm printlinear printmach proc reg reload reloadgen
;   schedgen scheduling selectgen selection spacetime_profiling spill split
;   strmatch x86_ast x86_dsl x86_gas x86_masm x86_proc
;
;   ;; mystery:
;   domainstate
;
;   ;; file_formats/
;   linear_format
;
;   ;; asmcomp/debug/
;   reg_availability_set compute_ranges_intf available_regs reg_with_debug_info
;   compute_ranges
;
;   ;; driver/
;   optcompile opterrors
; )
;)

; ocamlc

(executable
 (name main)
 (modes byte)
 ; We need to use ocamlmklib in "custom" mode for the runtime library
 ; in bytecode otherwise the compiler will end up looking for dllruntime.so
 ; which doesn't exist.  Since we don't seem to be able to do this, we
 ; currently don't add "runtime_byte" as a "libraries" dependency, but
 ; instead explicitly provide "-cclib" flags to pull it in.
 (flags (:standard -principal -nostdlib -cclib "-I runtime" -cclib "-L runtime" -cclib -lcamlrun))
 (link_deps (file stdlib/camlheader) (file runtime/libcamlrun.a))
; (modules_without_implementation
;   annot asttypes backend_intf cmo_format cmx_format cmxs_format
;   inlining_decision_intf outcometree parsetree simplify_boxed_integer_ops_intf
;   x86_ast)
 (libraries ocamlbytecomp ocamlcommon stdlib)
 (modules main))

(executable
 (name main_native)
 (modes native)
 (flags (:standard -principal -nostdlib))
; (modules_without_implementation
;   annot asttypes backend_intf cmo_format cmx_format cmxs_format
;   inlining_decision_intf outcometree parsetree simplify_boxed_integer_ops_intf
;   x86_ast)
 (libraries ocamlbytecomp ocamlcommon runtime_native stdlib)
 (modules main_native))

; ocamlopt

;(executable
; (name optmain)
; (modes byte)
; (flags (:standard -principal -nostdlib -cclib "-I runtime" -cclib "-L runtime" -cclib -lcamlrun))
; (link_deps (file stdlib/camlheader) (file runtime/libcamlrun.a))
;; (modules_without_implementation
;;   annot asttypes backend_intf cmo_format cmx_format cmxs_format
;;   inlining_decision_intf outcometree parsetree simplify_boxed_integer_ops_intf
;;   x86_ast)
; (libraries ocamloptcomp ocamlcommon stdlib)
; (modules optmain))
;;;;; (link_flags (-cclib -lunwind))
;;;;; (flags (:standard -principal -nostdlib -cclib "-I runtime"))
;
;(executable
; (name optmain_native)
; (modes native)
; (flags (:standard -principal -nostdlib))
;; (modules_without_implementation
;;   annot asttypes backend_intf cmo_format cmx_format cmxs_format
;;   inlining_decision_intf outcometree parsetree simplify_boxed_integer_ops_intf
;;   x86_ast)
; (libraries ocamloptcomp ocamlcommon runtime_native stdlib)
; (modules optmain_native))
;
; ocamlyacc (in this dune file as it's a sandboxed foreign build)

(data_only_dirs yacc)

(rule
 (deps (source_tree yacc))
 (targets ocamlyacc)
 (action
 (no-infer
  (progn
   (chdir yacc (run make -j8))
   (copy yacc/ocamlyacc ocamlyacc)))))

(install
  (files
    ocamlyacc
  )
  (section bin)
  (package ocaml))

(alias
 (name world)
 (deps ocamlc_byte.bc
;       ocamlopt_byte.bc
       debugger/ocamldebug.byte
       ocamldoc/ocamldoc.byte
       ocamltest/ocamltest.byte
       toplevel/byte
       toplevel/expunge.exe
       ))
;
;(alias
; (name world.opt)
; (deps
;   main.bc
;   main_native.exe
;   optmain.bc
;   optmain_native.exe
;   otherlibs/bigarray/bigarray.cma
;   otherlibs/bigarray/bigarray.cmxa
;   otherlibs/dynlink/dynlink.cma
;   otherlibs/dynlink/dynlink.cmxa
;   otherlibs/raw_spacetime_lib/raw_spacetime_lib.cma
;   otherlibs/raw_spacetime_lib/raw_spacetime_lib.cmxa
;   otherlibs/str/str.cma
;   otherlibs/str/str.cmxa
;   ; systhreads
;   otherlibs/unix/unix.cma
;   otherlibs/unix/unix.cmxa))

;(alias
;  (name libs)
;  (deps
;    ocamloptcomp.cma
;;    ocamlmiddleend.cma
;    ocamlcommon.cma
;    runtime/runtime.cma
;    stdlib/stdlib.cma
;    ocamlbytecomp.cma
;    ocamltest/ocamltest_core_and_plugin.cma
;    toplevel/ocamltoplevel.cma
;  ))

(install
  (files
    (main.bc as ocamlc.byte)
    (main_native.exe as ocamlc)
    (main_native.exe as ocamlc.opt)
;    (optmain.bc as ocamlopt.byte)
;    (optmain_native.exe as ocamlopt)
;    (optmain_native.exe as ocamlopt.opt)
  )
  (section bin)
  (package ocaml))

; For the moment we don't install optmain.{cmo,cmx,o} and opttopstart.{cmx,o}.
; When built with Dune, these have the "dune exe" module prefixes, so won't
; be named as a client would expect.  There should also be a patch upstream
; now that moves the content of these files e.g. optmain -> optmaindriver,
; the latter being normal library files, which would not suffer from this
; "dune exe" prefix problem.

(install
  (files
    (ocamlbytecomp.a as compiler-libs/ocamlbytecomp.a)
;    (ocamloptcomp.a as compiler-libs/ocamloptcomp.a)
;    (ocamlmiddleend.a as compiler-libs/ocamlmiddleend.a)
    (ocamlcommon.a as compiler-libs/ocamlcommon.a)

    (ocamlbytecomp.cmxa as compiler-libs/ocamlbytecomp.cmxa)
;    (ocamloptcomp.cmxa as compiler-libs/ocamloptcomp.cmxa)
;    (ocamlmiddleend.cmxa as compiler-libs/ocamlmiddleend.cmxa)
    (ocamlcommon.cmxa as compiler-libs/ocamlcommon.cmxa)

    (ocamlbytecomp.cma as compiler-libs/ocamlbytecomp.cma)
;    (ocamloptcomp.cma as compiler-libs/ocamloptcomp.cma)
;    (ocamlmiddleend.cma as compiler-libs/ocamlmiddleend.cma)
    (ocamlcommon.cma as compiler-libs/ocamlcommon.cma)
  )
  (section lib)
  (package ocaml))

(install
  (files
    Makefile.config
    VERSION
  )
  (section lib)
  (package ocaml))

; To regenerate the following lists use commands like:
; ls -1 _build/default/.ocamlmiddleend.objs/{byte,native}/*.cm* \
;   | sed 's:_build/default/:(:' \
;   | sed 's:\([a-z0-9_]*\.cm.*\)$:\1 as compiler-libs/\1):'
; We should fix Dune so it can do this installation for us.  Maybe enhancing
; the "section" construct would be sufficient.

(install
  (section lib)
  (package ocaml)
  (files
    ; Weird special cases - why?
    (bytegen.mli as compiler-libs/bytegen.mli)
    (bytelibrarian.mli as compiler-libs/bytelibrarian.mli)
    (bytelink.mli as compiler-libs/bytelink.mli)
    (bytepackager.mli as compiler-libs/bytepackager.mli)
    (emitcode.mli as compiler-libs/emitcode.mli)
    (compile.mli as compiler-libs/compile.mli)
    (errors.mli as compiler-libs/errors.mli)
;    (optcompile.mli as compiler-libs/optcompile.mli)
;    (opterrors.mli as compiler-libs/opterrors.mli)
    (printinstr.mli as compiler-libs/printinstr.mli)
    (instruct.mli as compiler-libs/instruct.mli)

    (.ocamlbytecomp.objs/byte/bytegen.cmi as compiler-libs/bytegen.cmi)
    (.ocamlbytecomp.objs/byte/bytegen.cmo as compiler-libs/bytegen.cmo)
    (.ocamlbytecomp.objs/byte/bytegen.cmt as compiler-libs/bytegen.cmt)
    (.ocamlbytecomp.objs/byte/bytegen.cmti as compiler-libs/bytegen.cmti)
    (.ocamlbytecomp.objs/byte/bytelibrarian.cmi as compiler-libs/bytelibrarian.cmi)
    (.ocamlbytecomp.objs/byte/bytelibrarian.cmo as compiler-libs/bytelibrarian.cmo)
    (.ocamlbytecomp.objs/byte/bytelibrarian.cmt as compiler-libs/bytelibrarian.cmt)
    (.ocamlbytecomp.objs/byte/bytelibrarian.cmti as compiler-libs/bytelibrarian.cmti)
    (.ocamlbytecomp.objs/byte/bytelink.cmi as compiler-libs/bytelink.cmi)
    (.ocamlbytecomp.objs/byte/bytelink.cmo as compiler-libs/bytelink.cmo)
    (.ocamlbytecomp.objs/byte/bytelink.cmt as compiler-libs/bytelink.cmt)
    (.ocamlbytecomp.objs/byte/bytelink.cmti as compiler-libs/bytelink.cmti)
    (.ocamlbytecomp.objs/byte/bytepackager.cmi as compiler-libs/bytepackager.cmi)
    (.ocamlbytecomp.objs/byte/bytepackager.cmo as compiler-libs/bytepackager.cmo)
    (.ocamlbytecomp.objs/byte/bytepackager.cmt as compiler-libs/bytepackager.cmt)
    (.ocamlbytecomp.objs/byte/bytepackager.cmti as compiler-libs/bytepackager.cmti)
    (.ocamlbytecomp.objs/byte/compile.cmi as compiler-libs/compile.cmi)
    (.ocamlbytecomp.objs/byte/compile.cmo as compiler-libs/compile.cmo)
    (.ocamlbytecomp.objs/byte/compile.cmt as compiler-libs/compile.cmt)
    (.ocamlbytecomp.objs/byte/compile.cmti as compiler-libs/compile.cmti)
    (.ocamlbytecomp.objs/byte/emitcode.cmi as compiler-libs/emitcode.cmi)
    (.ocamlbytecomp.objs/byte/emitcode.cmo as compiler-libs/emitcode.cmo)
    (.ocamlbytecomp.objs/byte/emitcode.cmt as compiler-libs/emitcode.cmt)
    (.ocamlbytecomp.objs/byte/emitcode.cmti as compiler-libs/emitcode.cmti)
    (.ocamlbytecomp.objs/byte/errors.cmi as compiler-libs/errors.cmi)
    (.ocamlbytecomp.objs/byte/errors.cmo as compiler-libs/errors.cmo)
    (.ocamlbytecomp.objs/byte/errors.cmt as compiler-libs/errors.cmt)
    (.ocamlbytecomp.objs/byte/errors.cmti as compiler-libs/errors.cmti)
    (.ocamlbytecomp.objs/byte/printinstr.cmi as compiler-libs/printinstr.cmi)
    (.ocamlbytecomp.objs/byte/printinstr.cmo as compiler-libs/printinstr.cmo)
    (.ocamlbytecomp.objs/byte/printinstr.cmt as compiler-libs/printinstr.cmt)
    (.ocamlbytecomp.objs/byte/printinstr.cmti as compiler-libs/printinstr.cmti)
    (.ocamlbytecomp.objs/byte/instruct.cmi as compiler-libs/instruct.cmi)
    (.ocamlbytecomp.objs/byte/instruct.cmo as compiler-libs/instruct.cmo)
    (.ocamlbytecomp.objs/byte/instruct.cmt as compiler-libs/instruct.cmt)
    (.ocamlbytecomp.objs/byte/instruct.cmti as compiler-libs/instruct.cmti)
    (.ocamlbytecomp.objs/native/bytegen.cmx as compiler-libs/bytegen.cmx)
    (.ocamlbytecomp.objs/native/bytelibrarian.cmx as compiler-libs/bytelibrarian.cmx)
    (.ocamlbytecomp.objs/native/bytelink.cmx as compiler-libs/bytelink.cmx)
    (.ocamlbytecomp.objs/native/bytepackager.cmx as compiler-libs/bytepackager.cmx)
    (.ocamlbytecomp.objs/native/compile.cmx as compiler-libs/compile.cmx)
    (.ocamlbytecomp.objs/native/emitcode.cmx as compiler-libs/emitcode.cmx)
    (.ocamlbytecomp.objs/native/errors.cmx as compiler-libs/errors.cmx)
    (.ocamlbytecomp.objs/native/instruct.cmx as compiler-libs/instruct.cmx)
    (.ocamlbytecomp.objs/native/printinstr.cmx as compiler-libs/printinstr.cmx)
  ))
;
;(install
;  (section lib)
;  (package ocaml)
;  (files
;    (.ocamloptcomp.objs/byte/afl_instrument.cmi as compiler-libs/afl_instrument.cmi)
;    (.ocamloptcomp.objs/byte/afl_instrument.cmo as compiler-libs/afl_instrument.cmo)
;    (.ocamloptcomp.objs/byte/afl_instrument.cmt as compiler-libs/afl_instrument.cmt)
;    (.ocamloptcomp.objs/byte/afl_instrument.cmti as compiler-libs/afl_instrument.cmti)
;    (.ocamloptcomp.objs/byte/arch.cmi as compiler-libs/arch.cmi)
;    (.ocamloptcomp.objs/byte/arch.cmo as compiler-libs/arch.cmo)
;    (.ocamloptcomp.objs/byte/arch.cmt as compiler-libs/arch.cmt)
;    (.ocamloptcomp.objs/byte/asmgen.cmi as compiler-libs/asmgen.cmi)
;    (.ocamloptcomp.objs/byte/asmgen.cmo as compiler-libs/asmgen.cmo)
;    (.ocamloptcomp.objs/byte/asmgen.cmt as compiler-libs/asmgen.cmt)
;    (.ocamloptcomp.objs/byte/asmgen.cmti as compiler-libs/asmgen.cmti)
;    (.ocamloptcomp.objs/byte/asmlibrarian.cmi as compiler-libs/asmlibrarian.cmi)
;    (.ocamloptcomp.objs/byte/asmlibrarian.cmo as compiler-libs/asmlibrarian.cmo)
;    (.ocamloptcomp.objs/byte/asmlibrarian.cmt as compiler-libs/asmlibrarian.cmt)
;    (.ocamloptcomp.objs/byte/asmlibrarian.cmti as compiler-libs/asmlibrarian.cmti)
;    (.ocamloptcomp.objs/byte/asmlink.cmi as compiler-libs/asmlink.cmi)
;    (.ocamloptcomp.objs/byte/asmlink.cmo as compiler-libs/asmlink.cmo)
;    (.ocamloptcomp.objs/byte/asmlink.cmt as compiler-libs/asmlink.cmt)
;    (.ocamloptcomp.objs/byte/asmlink.cmti as compiler-libs/asmlink.cmti)
;    (.ocamloptcomp.objs/byte/asmpackager.cmi as compiler-libs/asmpackager.cmi)
;    (.ocamloptcomp.objs/byte/asmpackager.cmo as compiler-libs/asmpackager.cmo)
;    (.ocamloptcomp.objs/byte/asmpackager.cmt as compiler-libs/asmpackager.cmt)
;    (.ocamloptcomp.objs/byte/asmpackager.cmti as compiler-libs/asmpackager.cmti)
;    (.ocamloptcomp.objs/byte/available_regs.cmi as compiler-libs/available_regs.cmi)
;    (.ocamloptcomp.objs/byte/available_regs.cmo as compiler-libs/available_regs.cmo)
;    (.ocamloptcomp.objs/byte/available_regs.cmt as compiler-libs/available_regs.cmt)
;    (.ocamloptcomp.objs/byte/available_regs.cmti as compiler-libs/available_regs.cmti)
;    (.ocamloptcomp.objs/byte/branch_relaxation.cmi as compiler-libs/branch_relaxation.cmi)
;    (.ocamloptcomp.objs/byte/branch_relaxation.cmo as compiler-libs/branch_relaxation.cmo)
;    (.ocamloptcomp.objs/byte/branch_relaxation.cmt as compiler-libs/branch_relaxation.cmt)
;    (.ocamloptcomp.objs/byte/branch_relaxation.cmti as compiler-libs/branch_relaxation.cmti)
;    (.ocamloptcomp.objs/byte/branch_relaxation_intf.cmi as compiler-libs/branch_relaxation_intf.cmi)
;    (.ocamloptcomp.objs/byte/branch_relaxation_intf.cmo as compiler-libs/branch_relaxation_intf.cmo)
;    (.ocamloptcomp.objs/byte/branch_relaxation_intf.cmt as compiler-libs/branch_relaxation_intf.cmt)
;    (.ocamloptcomp.objs/byte/cSE.cmi as compiler-libs/CSE.cmi)
;    (.ocamloptcomp.objs/byte/cSE.cmo as compiler-libs/CSE.cmo)
;    (.ocamloptcomp.objs/byte/cSE.cmt as compiler-libs/CSE.cmt)
;    (.ocamloptcomp.objs/byte/cSEgen.cmi as compiler-libs/CSEgen.cmi)
;    (.ocamloptcomp.objs/byte/cSEgen.cmo as compiler-libs/CSEgen.cmo)
;    (.ocamloptcomp.objs/byte/cSEgen.cmt as compiler-libs/CSEgen.cmt)
;    (.ocamloptcomp.objs/byte/cSEgen.cmti as compiler-libs/CSEgen.cmti)
;    (.ocamloptcomp.objs/byte/cmm.cmi as compiler-libs/cmm.cmi)
;    (.ocamloptcomp.objs/byte/cmm.cmo as compiler-libs/cmm.cmo)
;    (.ocamloptcomp.objs/byte/cmm.cmt as compiler-libs/cmm.cmt)
;    (.ocamloptcomp.objs/byte/cmm.cmti as compiler-libs/cmm.cmti)
;    (.ocamloptcomp.objs/byte/cmm_helpers.cmi as compiler-libs/cmm_helpers.cmi)
;    (.ocamloptcomp.objs/byte/cmm_helpers.cmo as compiler-libs/cmm_helpers.cmo)
;    (.ocamloptcomp.objs/byte/cmm_helpers.cmt as compiler-libs/cmm_helpers.cmt)
;    (.ocamloptcomp.objs/byte/cmm_helpers.cmti as compiler-libs/cmm_helpers.cmti)
;    (.ocamloptcomp.objs/byte/cmmgen.cmi as compiler-libs/cmmgen.cmi)
;    (.ocamloptcomp.objs/byte/cmmgen.cmo as compiler-libs/cmmgen.cmo)
;    (.ocamloptcomp.objs/byte/cmmgen.cmt as compiler-libs/cmmgen.cmt)
;    (.ocamloptcomp.objs/byte/cmmgen.cmti as compiler-libs/cmmgen.cmti)
;    (.ocamloptcomp.objs/byte/cmmgen_state.cmi as compiler-libs/cmmgen_state.cmi)
;    (.ocamloptcomp.objs/byte/cmmgen_state.cmo as compiler-libs/cmmgen_state.cmo)
;    (.ocamloptcomp.objs/byte/cmmgen_state.cmt as compiler-libs/cmmgen_state.cmt)
;    (.ocamloptcomp.objs/byte/cmmgen_state.cmti as compiler-libs/cmmgen_state.cmti)
;    (.ocamloptcomp.objs/byte/coloring.cmi as compiler-libs/coloring.cmi)
;    (.ocamloptcomp.objs/byte/coloring.cmo as compiler-libs/coloring.cmo)
;    (.ocamloptcomp.objs/byte/coloring.cmt as compiler-libs/coloring.cmt)
;    (.ocamloptcomp.objs/byte/coloring.cmti as compiler-libs/coloring.cmti)
;    (.ocamloptcomp.objs/byte/comballoc.cmi as compiler-libs/comballoc.cmi)
;    (.ocamloptcomp.objs/byte/comballoc.cmo as compiler-libs/comballoc.cmo)
;    (.ocamloptcomp.objs/byte/comballoc.cmt as compiler-libs/comballoc.cmt)
;    (.ocamloptcomp.objs/byte/comballoc.cmti as compiler-libs/comballoc.cmti)
;    (.ocamloptcomp.objs/byte/compute_ranges.cmi as compiler-libs/compute_ranges.cmi)
;    (.ocamloptcomp.objs/byte/compute_ranges.cmo as compiler-libs/compute_ranges.cmo)
;    (.ocamloptcomp.objs/byte/compute_ranges.cmt as compiler-libs/compute_ranges.cmt)
;    (.ocamloptcomp.objs/byte/compute_ranges.cmti as compiler-libs/compute_ranges.cmti)
;    (.ocamloptcomp.objs/byte/compute_ranges_intf.cmi as compiler-libs/compute_ranges_intf.cmi)
;    (.ocamloptcomp.objs/byte/compute_ranges_intf.cmo as compiler-libs/compute_ranges_intf.cmo)
;    (.ocamloptcomp.objs/byte/compute_ranges_intf.cmt as compiler-libs/compute_ranges_intf.cmt)
;    (.ocamloptcomp.objs/byte/deadcode.cmi as compiler-libs/deadcode.cmi)
;    (.ocamloptcomp.objs/byte/deadcode.cmo as compiler-libs/deadcode.cmo)
;    (.ocamloptcomp.objs/byte/deadcode.cmt as compiler-libs/deadcode.cmt)
;    (.ocamloptcomp.objs/byte/deadcode.cmti as compiler-libs/deadcode.cmti)
;    (.ocamloptcomp.objs/byte/domainstate.cmi as compiler-libs/domainstate.cmi)
;    (.ocamloptcomp.objs/byte/domainstate.cmo as compiler-libs/domainstate.cmo)
;    (.ocamloptcomp.objs/byte/domainstate.cmt as compiler-libs/domainstate.cmt)
;    (.ocamloptcomp.objs/byte/domainstate.cmti as compiler-libs/domainstate.cmti)
;    (.ocamloptcomp.objs/byte/emit.cmi as compiler-libs/emit.cmi)
;    (.ocamloptcomp.objs/byte/emit.cmo as compiler-libs/emit.cmo)
;    (.ocamloptcomp.objs/byte/emit.cmt as compiler-libs/emit.cmt)
;    (.ocamloptcomp.objs/byte/emit.cmti as compiler-libs/emit.cmti)
;    (.ocamloptcomp.objs/byte/emitaux.cmi as compiler-libs/emitaux.cmi)
;    (.ocamloptcomp.objs/byte/emitaux.cmo as compiler-libs/emitaux.cmo)
;    (.ocamloptcomp.objs/byte/emitaux.cmt as compiler-libs/emitaux.cmt)
;    (.ocamloptcomp.objs/byte/emitaux.cmti as compiler-libs/emitaux.cmti)
;    (.ocamloptcomp.objs/byte/interf.cmi as compiler-libs/interf.cmi)
;    (.ocamloptcomp.objs/byte/interf.cmo as compiler-libs/interf.cmo)
;    (.ocamloptcomp.objs/byte/interf.cmt as compiler-libs/interf.cmt)
;    (.ocamloptcomp.objs/byte/interf.cmti as compiler-libs/interf.cmti)
;    (.ocamloptcomp.objs/byte/interval.cmi as compiler-libs/interval.cmi)
;    (.ocamloptcomp.objs/byte/interval.cmo as compiler-libs/interval.cmo)
;    (.ocamloptcomp.objs/byte/interval.cmt as compiler-libs/interval.cmt)
;    (.ocamloptcomp.objs/byte/interval.cmti as compiler-libs/interval.cmti)
;    (.ocamloptcomp.objs/byte/linear.cmi as compiler-libs/linear.cmi)
;    (.ocamloptcomp.objs/byte/linear.cmo as compiler-libs/linear.cmo)
;    (.ocamloptcomp.objs/byte/linear.cmt as compiler-libs/linear.cmt)
;    (.ocamloptcomp.objs/byte/linear.cmti as compiler-libs/linear.cmti)
;    (.ocamloptcomp.objs/byte/linearize.cmi as compiler-libs/linearize.cmi)
;    (.ocamloptcomp.objs/byte/linearize.cmo as compiler-libs/linearize.cmo)
;    (.ocamloptcomp.objs/byte/linearize.cmt as compiler-libs/linearize.cmt)
;    (.ocamloptcomp.objs/byte/linearize.cmti as compiler-libs/linearize.cmti)
;    (.ocamloptcomp.objs/byte/linscan.cmi as compiler-libs/linscan.cmi)
;    (.ocamloptcomp.objs/byte/linscan.cmo as compiler-libs/linscan.cmo)
;    (.ocamloptcomp.objs/byte/linscan.cmt as compiler-libs/linscan.cmt)
;    (.ocamloptcomp.objs/byte/linscan.cmti as compiler-libs/linscan.cmti)
;    (.ocamloptcomp.objs/byte/liveness.cmi as compiler-libs/liveness.cmi)
;    (.ocamloptcomp.objs/byte/liveness.cmo as compiler-libs/liveness.cmo)
;    (.ocamloptcomp.objs/byte/liveness.cmt as compiler-libs/liveness.cmt)
;    (.ocamloptcomp.objs/byte/liveness.cmti as compiler-libs/liveness.cmti)
;    (.ocamloptcomp.objs/byte/mach.cmi as compiler-libs/mach.cmi)
;    (.ocamloptcomp.objs/byte/mach.cmo as compiler-libs/mach.cmo)
;    (.ocamloptcomp.objs/byte/mach.cmt as compiler-libs/mach.cmt)
;    (.ocamloptcomp.objs/byte/mach.cmti as compiler-libs/mach.cmti)
;    (.ocamloptcomp.objs/byte/optcompile.cmi as compiler-libs/optcompile.cmi)
;    (.ocamloptcomp.objs/byte/optcompile.cmo as compiler-libs/optcompile.cmo)
;    (.ocamloptcomp.objs/byte/optcompile.cmt as compiler-libs/optcompile.cmt)
;    (.ocamloptcomp.objs/byte/optcompile.cmti as compiler-libs/optcompile.cmti)
;    (.ocamloptcomp.objs/byte/opterrors.cmi as compiler-libs/opterrors.cmi)
;    (.ocamloptcomp.objs/byte/opterrors.cmo as compiler-libs/opterrors.cmo)
;    (.ocamloptcomp.objs/byte/opterrors.cmt as compiler-libs/opterrors.cmt)
;    (.ocamloptcomp.objs/byte/opterrors.cmti as compiler-libs/opterrors.cmti)
;    (.ocamloptcomp.objs/byte/printcmm.cmi as compiler-libs/printcmm.cmi)
;    (.ocamloptcomp.objs/byte/printcmm.cmo as compiler-libs/printcmm.cmo)
;    (.ocamloptcomp.objs/byte/printcmm.cmt as compiler-libs/printcmm.cmt)
;    (.ocamloptcomp.objs/byte/printcmm.cmti as compiler-libs/printcmm.cmti)
;    (.ocamloptcomp.objs/byte/printlinear.cmi as compiler-libs/printlinear.cmi)
;    (.ocamloptcomp.objs/byte/printlinear.cmo as compiler-libs/printlinear.cmo)
;    (.ocamloptcomp.objs/byte/printlinear.cmt as compiler-libs/printlinear.cmt)
;    (.ocamloptcomp.objs/byte/printlinear.cmti as compiler-libs/printlinear.cmti)
;    (.ocamloptcomp.objs/byte/printmach.cmi as compiler-libs/printmach.cmi)
;    (.ocamloptcomp.objs/byte/printmach.cmo as compiler-libs/printmach.cmo)
;    (.ocamloptcomp.objs/byte/printmach.cmt as compiler-libs/printmach.cmt)
;    (.ocamloptcomp.objs/byte/printmach.cmti as compiler-libs/printmach.cmti)
;    (.ocamloptcomp.objs/byte/proc.cmi as compiler-libs/proc.cmi)
;    (.ocamloptcomp.objs/byte/proc.cmo as compiler-libs/proc.cmo)
;    (.ocamloptcomp.objs/byte/proc.cmt as compiler-libs/proc.cmt)
;    (.ocamloptcomp.objs/byte/proc.cmti as compiler-libs/proc.cmti)
;    (.ocamloptcomp.objs/byte/reg.cmi as compiler-libs/reg.cmi)
;    (.ocamloptcomp.objs/byte/reg.cmo as compiler-libs/reg.cmo)
;    (.ocamloptcomp.objs/byte/reg.cmt as compiler-libs/reg.cmt)
;    (.ocamloptcomp.objs/byte/reg.cmti as compiler-libs/reg.cmti)
;    (.ocamloptcomp.objs/byte/reg_availability_set.cmi as compiler-libs/reg_availability_set.cmi)
;    (.ocamloptcomp.objs/byte/reg_availability_set.cmo as compiler-libs/reg_availability_set.cmo)
;    (.ocamloptcomp.objs/byte/reg_availability_set.cmt as compiler-libs/reg_availability_set.cmt)
;    (.ocamloptcomp.objs/byte/reg_availability_set.cmti as compiler-libs/reg_availability_set.cmti)
;    (.ocamloptcomp.objs/byte/reg_with_debug_info.cmi as compiler-libs/reg_with_debug_info.cmi)
;    (.ocamloptcomp.objs/byte/reg_with_debug_info.cmo as compiler-libs/reg_with_debug_info.cmo)
;    (.ocamloptcomp.objs/byte/reg_with_debug_info.cmt as compiler-libs/reg_with_debug_info.cmt)
;    (.ocamloptcomp.objs/byte/reg_with_debug_info.cmti as compiler-libs/reg_with_debug_info.cmti)
;    (.ocamloptcomp.objs/byte/reload.cmi as compiler-libs/reload.cmi)
;    (.ocamloptcomp.objs/byte/reload.cmo as compiler-libs/reload.cmo)
;    (.ocamloptcomp.objs/byte/reload.cmt as compiler-libs/reload.cmt)
;    (.ocamloptcomp.objs/byte/reload.cmti as compiler-libs/reload.cmti)
;    (.ocamloptcomp.objs/byte/reloadgen.cmi as compiler-libs/reloadgen.cmi)
;    (.ocamloptcomp.objs/byte/reloadgen.cmo as compiler-libs/reloadgen.cmo)
;    (.ocamloptcomp.objs/byte/reloadgen.cmt as compiler-libs/reloadgen.cmt)
;    (.ocamloptcomp.objs/byte/reloadgen.cmti as compiler-libs/reloadgen.cmti)
;    (.ocamloptcomp.objs/byte/schedgen.cmi as compiler-libs/schedgen.cmi)
;    (.ocamloptcomp.objs/byte/schedgen.cmo as compiler-libs/schedgen.cmo)
;    (.ocamloptcomp.objs/byte/schedgen.cmt as compiler-libs/schedgen.cmt)
;    (.ocamloptcomp.objs/byte/schedgen.cmti as compiler-libs/schedgen.cmti)
;    (.ocamloptcomp.objs/byte/scheduling.cmi as compiler-libs/scheduling.cmi)
;    (.ocamloptcomp.objs/byte/scheduling.cmo as compiler-libs/scheduling.cmo)
;    (.ocamloptcomp.objs/byte/scheduling.cmt as compiler-libs/scheduling.cmt)
;    (.ocamloptcomp.objs/byte/scheduling.cmti as compiler-libs/scheduling.cmti)
;    (.ocamloptcomp.objs/byte/selectgen.cmi as compiler-libs/selectgen.cmi)
;    (.ocamloptcomp.objs/byte/selectgen.cmo as compiler-libs/selectgen.cmo)
;    (.ocamloptcomp.objs/byte/selectgen.cmt as compiler-libs/selectgen.cmt)
;    (.ocamloptcomp.objs/byte/selectgen.cmti as compiler-libs/selectgen.cmti)
;    (.ocamloptcomp.objs/byte/selection.cmi as compiler-libs/selection.cmi)
;    (.ocamloptcomp.objs/byte/selection.cmo as compiler-libs/selection.cmo)
;    (.ocamloptcomp.objs/byte/selection.cmt as compiler-libs/selection.cmt)
;    (.ocamloptcomp.objs/byte/selection.cmti as compiler-libs/selection.cmti)
;    (.ocamloptcomp.objs/byte/spacetime_profiling.cmi as compiler-libs/spacetime_profiling.cmi)
;    (.ocamloptcomp.objs/byte/spacetime_profiling.cmo as compiler-libs/spacetime_profiling.cmo)
;    (.ocamloptcomp.objs/byte/spacetime_profiling.cmt as compiler-libs/spacetime_profiling.cmt)
;    (.ocamloptcomp.objs/byte/spacetime_profiling.cmti as compiler-libs/spacetime_profiling.cmti)
;    (.ocamloptcomp.objs/byte/spill.cmi as compiler-libs/spill.cmi)
;    (.ocamloptcomp.objs/byte/spill.cmo as compiler-libs/spill.cmo)
;    (.ocamloptcomp.objs/byte/spill.cmt as compiler-libs/spill.cmt)
;    (.ocamloptcomp.objs/byte/spill.cmti as compiler-libs/spill.cmti)
;    (.ocamloptcomp.objs/byte/split.cmi as compiler-libs/split.cmi)
;    (.ocamloptcomp.objs/byte/split.cmo as compiler-libs/split.cmo)
;    (.ocamloptcomp.objs/byte/split.cmt as compiler-libs/split.cmt)
;    (.ocamloptcomp.objs/byte/split.cmti as compiler-libs/split.cmti)
;    (.ocamloptcomp.objs/byte/strmatch.cmi as compiler-libs/strmatch.cmi)
;    (.ocamloptcomp.objs/byte/strmatch.cmo as compiler-libs/strmatch.cmo)
;    (.ocamloptcomp.objs/byte/strmatch.cmt as compiler-libs/strmatch.cmt)
;    (.ocamloptcomp.objs/byte/strmatch.cmti as compiler-libs/strmatch.cmti)
;    (.ocamloptcomp.objs/byte/x86_ast.cmi as compiler-libs/x86_ast.cmi)
;    (.ocamloptcomp.objs/byte/x86_ast.cmti as compiler-libs/x86_ast.cmti)
;    (.ocamloptcomp.objs/byte/x86_dsl.cmi as compiler-libs/x86_dsl.cmi)
;    (.ocamloptcomp.objs/byte/x86_dsl.cmo as compiler-libs/x86_dsl.cmo)
;    (.ocamloptcomp.objs/byte/x86_dsl.cmt as compiler-libs/x86_dsl.cmt)
;    (.ocamloptcomp.objs/byte/x86_dsl.cmti as compiler-libs/x86_dsl.cmti)
;    (.ocamloptcomp.objs/byte/x86_gas.cmi as compiler-libs/x86_gas.cmi)
;    (.ocamloptcomp.objs/byte/x86_gas.cmo as compiler-libs/x86_gas.cmo)
;    (.ocamloptcomp.objs/byte/x86_gas.cmt as compiler-libs/x86_gas.cmt)
;    (.ocamloptcomp.objs/byte/x86_gas.cmti as compiler-libs/x86_gas.cmti)
;    (.ocamloptcomp.objs/byte/x86_masm.cmi as compiler-libs/x86_masm.cmi)
;    (.ocamloptcomp.objs/byte/x86_masm.cmo as compiler-libs/x86_masm.cmo)
;    (.ocamloptcomp.objs/byte/x86_masm.cmt as compiler-libs/x86_masm.cmt)
;    (.ocamloptcomp.objs/byte/x86_masm.cmti as compiler-libs/x86_masm.cmti)
;    (.ocamloptcomp.objs/byte/x86_proc.cmi as compiler-libs/x86_proc.cmi)
;    (.ocamloptcomp.objs/byte/x86_proc.cmo as compiler-libs/x86_proc.cmo)
;    (.ocamloptcomp.objs/byte/x86_proc.cmt as compiler-libs/x86_proc.cmt)
;    (.ocamloptcomp.objs/byte/x86_proc.cmti as compiler-libs/x86_proc.cmti)
;    (.ocamloptcomp.objs/native/afl_instrument.cmx as compiler-libs/afl_instrument.cmx)
;    (.ocamloptcomp.objs/native/arch.cmx as compiler-libs/arch.cmx)
;    (.ocamloptcomp.objs/native/asmgen.cmx as compiler-libs/asmgen.cmx)
;    (.ocamloptcomp.objs/native/asmlibrarian.cmx as compiler-libs/asmlibrarian.cmx)
;    (.ocamloptcomp.objs/native/asmlink.cmx as compiler-libs/asmlink.cmx)
;    (.ocamloptcomp.objs/native/asmpackager.cmx as compiler-libs/asmpackager.cmx)
;    (.ocamloptcomp.objs/native/available_regs.cmx as compiler-libs/available_regs.cmx)
;    (.ocamloptcomp.objs/native/branch_relaxation.cmx as compiler-libs/branch_relaxation.cmx)
;    (.ocamloptcomp.objs/native/branch_relaxation_intf.cmx as compiler-libs/branch_relaxation_intf.cmx)
;    (.ocamloptcomp.objs/native/cSE.cmx as compiler-libs/CSE.cmx)
;    (.ocamloptcomp.objs/native/cSEgen.cmx as compiler-libs/CSEgen.cmx)
;    (.ocamloptcomp.objs/native/cmm.cmx as compiler-libs/cmm.cmx)
;    (.ocamloptcomp.objs/native/cmm_helpers.cmx as compiler-libs/cmm_helpers.cmx)
;    (.ocamloptcomp.objs/native/cmmgen.cmx as compiler-libs/cmmgen.cmx)
;    (.ocamloptcomp.objs/native/cmmgen_state.cmx as compiler-libs/cmmgen_state.cmx)
;    (.ocamloptcomp.objs/native/coloring.cmx as compiler-libs/coloring.cmx)
;    (.ocamloptcomp.objs/native/comballoc.cmx as compiler-libs/comballoc.cmx)
;    (.ocamloptcomp.objs/native/compute_ranges.cmx as compiler-libs/compute_ranges.cmx)
;    (.ocamloptcomp.objs/native/compute_ranges_intf.cmx as compiler-libs/compute_ranges_intf.cmx)
;    (.ocamloptcomp.objs/native/deadcode.cmx as compiler-libs/deadcode.cmx)
;    (.ocamloptcomp.objs/native/domainstate.cmx as compiler-libs/domainstate.cmx)
;    (.ocamloptcomp.objs/native/emit.cmx as compiler-libs/emit.cmx)
;    (.ocamloptcomp.objs/native/emitaux.cmx as compiler-libs/emitaux.cmx)
;    (.ocamloptcomp.objs/native/interf.cmx as compiler-libs/interf.cmx)
;    (.ocamloptcomp.objs/native/interval.cmx as compiler-libs/interval.cmx)
;    (.ocamloptcomp.objs/native/linear.cmx as compiler-libs/linear.cmx)
;    (.ocamloptcomp.objs/native/linearize.cmx as compiler-libs/linearize.cmx)
;    (.ocamloptcomp.objs/native/linscan.cmx as compiler-libs/linscan.cmx)
;    (.ocamloptcomp.objs/native/liveness.cmx as compiler-libs/liveness.cmx)
;    (.ocamloptcomp.objs/native/mach.cmx as compiler-libs/mach.cmx)
;    (.ocamloptcomp.objs/native/optcompile.cmx as compiler-libs/optcompile.cmx)
;    (.ocamloptcomp.objs/native/opterrors.cmx as compiler-libs/opterrors.cmx)
;    (.ocamloptcomp.objs/native/printcmm.cmx as compiler-libs/printcmm.cmx)
;    (.ocamloptcomp.objs/native/printlinear.cmx as compiler-libs/printlinear.cmx)
;    (.ocamloptcomp.objs/native/printmach.cmx as compiler-libs/printmach.cmx)
;    (.ocamloptcomp.objs/native/proc.cmx as compiler-libs/proc.cmx)
;    (.ocamloptcomp.objs/native/reg.cmx as compiler-libs/reg.cmx)
;    (.ocamloptcomp.objs/native/reg_availability_set.cmx as compiler-libs/reg_availability_set.cmx)
;    (.ocamloptcomp.objs/native/reg_with_debug_info.cmx as compiler-libs/reg_with_debug_info.cmx)
;    (.ocamloptcomp.objs/native/reload.cmx as compiler-libs/reload.cmx)
;    (.ocamloptcomp.objs/native/reloadgen.cmx as compiler-libs/reloadgen.cmx)
;    (.ocamloptcomp.objs/native/schedgen.cmx as compiler-libs/schedgen.cmx)
;    (.ocamloptcomp.objs/native/scheduling.cmx as compiler-libs/scheduling.cmx)
;    (.ocamloptcomp.objs/native/selectgen.cmx as compiler-libs/selectgen.cmx)
;    (.ocamloptcomp.objs/native/selection.cmx as compiler-libs/selection.cmx)
;    (.ocamloptcomp.objs/native/spacetime_profiling.cmx as compiler-libs/spacetime_profiling.cmx)
;    (.ocamloptcomp.objs/native/spill.cmx as compiler-libs/spill.cmx)
;    (.ocamloptcomp.objs/native/split.cmx as compiler-libs/split.cmx)
;    (.ocamloptcomp.objs/native/strmatch.cmx as compiler-libs/strmatch.cmx)
;    (.ocamloptcomp.objs/native/x86_dsl.cmx as compiler-libs/x86_dsl.cmx)
;    (.ocamloptcomp.objs/native/x86_gas.cmx as compiler-libs/x86_gas.cmx)
;    (.ocamloptcomp.objs/native/x86_masm.cmx as compiler-libs/x86_masm.cmx)
;    (.ocamloptcomp.objs/native/x86_proc.cmx as compiler-libs/x86_proc.cmx)
;  ))
;
;(install
;  (section lib)
;  (package ocaml)
;  (files
;    ; These are the ocamlmiddleend ones
;    (.ocamloptcomp.objs/byte/alias_analysis.cmi as compiler-libs/alias_analysis.cmi)
;    (.ocamloptcomp.objs/byte/alias_analysis.cmo as compiler-libs/alias_analysis.cmo)
;    (.ocamloptcomp.objs/byte/alias_analysis.cmt as compiler-libs/alias_analysis.cmt)
;    (.ocamloptcomp.objs/byte/alias_analysis.cmti as compiler-libs/alias_analysis.cmti)
;    (.ocamloptcomp.objs/byte/allocated_const.cmi as compiler-libs/allocated_const.cmi)
;    (.ocamloptcomp.objs/byte/allocated_const.cmo as compiler-libs/allocated_const.cmo)
;    (.ocamloptcomp.objs/byte/allocated_const.cmt as compiler-libs/allocated_const.cmt)
;    (.ocamloptcomp.objs/byte/allocated_const.cmti as compiler-libs/allocated_const.cmti)
;    (.ocamloptcomp.objs/byte/augment_specialised_args.cmi as compiler-libs/augment_specialised_args.cmi)
;    (.ocamloptcomp.objs/byte/augment_specialised_args.cmo as compiler-libs/augment_specialised_args.cmo)
;    (.ocamloptcomp.objs/byte/augment_specialised_args.cmt as compiler-libs/augment_specialised_args.cmt)
;    (.ocamloptcomp.objs/byte/augment_specialised_args.cmti as compiler-libs/augment_specialised_args.cmti)
;    (.ocamloptcomp.objs/byte/backend_intf.cmi as compiler-libs/backend_intf.cmi)
;    (.ocamloptcomp.objs/byte/backend_intf.cmti as compiler-libs/backend_intf.cmti)
;    (.ocamloptcomp.objs/byte/backend_var.cmi as compiler-libs/backend_var.cmi)
;    (.ocamloptcomp.objs/byte/backend_var.cmo as compiler-libs/backend_var.cmo)
;    (.ocamloptcomp.objs/byte/backend_var.cmt as compiler-libs/backend_var.cmt)
;    (.ocamloptcomp.objs/byte/backend_var.cmti as compiler-libs/backend_var.cmti)
;    (.ocamloptcomp.objs/byte/build_export_info.cmi as compiler-libs/build_export_info.cmi)
;    (.ocamloptcomp.objs/byte/build_export_info.cmo as compiler-libs/build_export_info.cmo)
;    (.ocamloptcomp.objs/byte/build_export_info.cmt as compiler-libs/build_export_info.cmt)
;    (.ocamloptcomp.objs/byte/build_export_info.cmti as compiler-libs/build_export_info.cmti)
;    (.ocamloptcomp.objs/byte/clambda.cmi as compiler-libs/clambda.cmi)
;    (.ocamloptcomp.objs/byte/clambda.cmo as compiler-libs/clambda.cmo)
;    (.ocamloptcomp.objs/byte/clambda.cmt as compiler-libs/clambda.cmt)
;    (.ocamloptcomp.objs/byte/clambda.cmti as compiler-libs/clambda.cmti)
;    (.ocamloptcomp.objs/byte/clambda_primitives.cmi as compiler-libs/clambda_primitives.cmi)
;    (.ocamloptcomp.objs/byte/clambda_primitives.cmo as compiler-libs/clambda_primitives.cmo)
;    (.ocamloptcomp.objs/byte/clambda_primitives.cmt as compiler-libs/clambda_primitives.cmt)
;    (.ocamloptcomp.objs/byte/clambda_primitives.cmti as compiler-libs/clambda_primitives.cmti)
;    (.ocamloptcomp.objs/byte/closure.cmi as compiler-libs/closure.cmi)
;    (.ocamloptcomp.objs/byte/closure.cmo as compiler-libs/closure.cmo)
;    (.ocamloptcomp.objs/byte/closure.cmt as compiler-libs/closure.cmt)
;    (.ocamloptcomp.objs/byte/closure.cmti as compiler-libs/closure.cmti)
;    (.ocamloptcomp.objs/byte/closure_conversion.cmi as compiler-libs/closure_conversion.cmi)
;    (.ocamloptcomp.objs/byte/closure_conversion.cmo as compiler-libs/closure_conversion.cmo)
;    (.ocamloptcomp.objs/byte/closure_conversion.cmt as compiler-libs/closure_conversion.cmt)
;    (.ocamloptcomp.objs/byte/closure_conversion.cmti as compiler-libs/closure_conversion.cmti)
;    (.ocamloptcomp.objs/byte/closure_conversion_aux.cmi as compiler-libs/closure_conversion_aux.cmi)
;    (.ocamloptcomp.objs/byte/closure_conversion_aux.cmo as compiler-libs/closure_conversion_aux.cmo)
;    (.ocamloptcomp.objs/byte/closure_conversion_aux.cmt as compiler-libs/closure_conversion_aux.cmt)
;    (.ocamloptcomp.objs/byte/closure_conversion_aux.cmti as compiler-libs/closure_conversion_aux.cmti)
;    (.ocamloptcomp.objs/byte/closure_element.cmi as compiler-libs/closure_element.cmi)
;    (.ocamloptcomp.objs/byte/closure_element.cmo as compiler-libs/closure_element.cmo)
;    (.ocamloptcomp.objs/byte/closure_element.cmt as compiler-libs/closure_element.cmt)
;    (.ocamloptcomp.objs/byte/closure_element.cmti as compiler-libs/closure_element.cmti)
;    (.ocamloptcomp.objs/byte/closure_id.cmi as compiler-libs/closure_id.cmi)
;    (.ocamloptcomp.objs/byte/closure_id.cmo as compiler-libs/closure_id.cmo)
;    (.ocamloptcomp.objs/byte/closure_id.cmt as compiler-libs/closure_id.cmt)
;    (.ocamloptcomp.objs/byte/closure_id.cmti as compiler-libs/closure_id.cmti)
;    (.ocamloptcomp.objs/byte/closure_middle_end.cmi as compiler-libs/closure_middle_end.cmi)
;    (.ocamloptcomp.objs/byte/closure_middle_end.cmo as compiler-libs/closure_middle_end.cmo)
;    (.ocamloptcomp.objs/byte/closure_middle_end.cmt as compiler-libs/closure_middle_end.cmt)
;    (.ocamloptcomp.objs/byte/closure_middle_end.cmti as compiler-libs/closure_middle_end.cmti)
;    (.ocamloptcomp.objs/byte/closure_offsets.cmi as compiler-libs/closure_offsets.cmi)
;    (.ocamloptcomp.objs/byte/closure_offsets.cmo as compiler-libs/closure_offsets.cmo)
;    (.ocamloptcomp.objs/byte/closure_offsets.cmt as compiler-libs/closure_offsets.cmt)
;    (.ocamloptcomp.objs/byte/closure_offsets.cmti as compiler-libs/closure_offsets.cmti)
;    (.ocamloptcomp.objs/byte/closure_origin.cmi as compiler-libs/closure_origin.cmi)
;    (.ocamloptcomp.objs/byte/closure_origin.cmo as compiler-libs/closure_origin.cmo)
;    (.ocamloptcomp.objs/byte/closure_origin.cmt as compiler-libs/closure_origin.cmt)
;    (.ocamloptcomp.objs/byte/closure_origin.cmti as compiler-libs/closure_origin.cmti)
;    (.ocamloptcomp.objs/byte/cmx_format.cmi as compiler-libs/cmx_format.cmi)
;    (.ocamloptcomp.objs/byte/cmx_format.cmti as compiler-libs/cmx_format.cmti)
;    (.ocamloptcomp.objs/byte/cmxs_format.cmi as compiler-libs/cmxs_format.cmi)
;    (.ocamloptcomp.objs/byte/cmxs_format.cmti as compiler-libs/cmxs_format.cmti)
;    (.ocamloptcomp.objs/byte/compilation_unit.cmi as compiler-libs/compilation_unit.cmi)
;    (.ocamloptcomp.objs/byte/compilation_unit.cmo as compiler-libs/compilation_unit.cmo)
;    (.ocamloptcomp.objs/byte/compilation_unit.cmt as compiler-libs/compilation_unit.cmt)
;    (.ocamloptcomp.objs/byte/compilation_unit.cmti as compiler-libs/compilation_unit.cmti)
;    (.ocamloptcomp.objs/byte/compilenv.cmi as compiler-libs/compilenv.cmi)
;    (.ocamloptcomp.objs/byte/compilenv.cmo as compiler-libs/compilenv.cmo)
;    (.ocamloptcomp.objs/byte/compilenv.cmt as compiler-libs/compilenv.cmt)
;    (.ocamloptcomp.objs/byte/compilenv.cmti as compiler-libs/compilenv.cmti)
;    (.ocamloptcomp.objs/byte/convert_primitives.cmi as compiler-libs/convert_primitives.cmi)
;    (.ocamloptcomp.objs/byte/convert_primitives.cmo as compiler-libs/convert_primitives.cmo)
;    (.ocamloptcomp.objs/byte/convert_primitives.cmt as compiler-libs/convert_primitives.cmt)
;    (.ocamloptcomp.objs/byte/convert_primitives.cmti as compiler-libs/convert_primitives.cmti)
;    (.ocamloptcomp.objs/byte/effect_analysis.cmi as compiler-libs/effect_analysis.cmi)
;    (.ocamloptcomp.objs/byte/effect_analysis.cmo as compiler-libs/effect_analysis.cmo)
;    (.ocamloptcomp.objs/byte/effect_analysis.cmt as compiler-libs/effect_analysis.cmt)
;    (.ocamloptcomp.objs/byte/effect_analysis.cmti as compiler-libs/effect_analysis.cmti)
;    (.ocamloptcomp.objs/byte/export_id.cmi as compiler-libs/export_id.cmi)
;    (.ocamloptcomp.objs/byte/export_id.cmo as compiler-libs/export_id.cmo)
;    (.ocamloptcomp.objs/byte/export_id.cmt as compiler-libs/export_id.cmt)
;    (.ocamloptcomp.objs/byte/export_id.cmti as compiler-libs/export_id.cmti)
;    (.ocamloptcomp.objs/byte/export_info.cmi as compiler-libs/export_info.cmi)
;    (.ocamloptcomp.objs/byte/export_info.cmo as compiler-libs/export_info.cmo)
;    (.ocamloptcomp.objs/byte/export_info.cmt as compiler-libs/export_info.cmt)
;    (.ocamloptcomp.objs/byte/export_info.cmti as compiler-libs/export_info.cmti)
;    (.ocamloptcomp.objs/byte/export_info_for_pack.cmi as compiler-libs/export_info_for_pack.cmi)
;    (.ocamloptcomp.objs/byte/export_info_for_pack.cmo as compiler-libs/export_info_for_pack.cmo)
;    (.ocamloptcomp.objs/byte/export_info_for_pack.cmt as compiler-libs/export_info_for_pack.cmt)
;    (.ocamloptcomp.objs/byte/export_info_for_pack.cmti as compiler-libs/export_info_for_pack.cmti)
;    (.ocamloptcomp.objs/byte/extract_projections.cmi as compiler-libs/extract_projections.cmi)
;    (.ocamloptcomp.objs/byte/extract_projections.cmo as compiler-libs/extract_projections.cmo)
;    (.ocamloptcomp.objs/byte/extract_projections.cmt as compiler-libs/extract_projections.cmt)
;    (.ocamloptcomp.objs/byte/extract_projections.cmti as compiler-libs/extract_projections.cmti)
;    (.ocamloptcomp.objs/byte/find_recursive_functions.cmi as compiler-libs/find_recursive_functions.cmi)
;    (.ocamloptcomp.objs/byte/find_recursive_functions.cmo as compiler-libs/find_recursive_functions.cmo)
;    (.ocamloptcomp.objs/byte/find_recursive_functions.cmt as compiler-libs/find_recursive_functions.cmt)
;    (.ocamloptcomp.objs/byte/find_recursive_functions.cmti as compiler-libs/find_recursive_functions.cmti)
;    (.ocamloptcomp.objs/byte/flambda.cmi as compiler-libs/flambda.cmi)
;    (.ocamloptcomp.objs/byte/flambda.cmo as compiler-libs/flambda.cmo)
;    (.ocamloptcomp.objs/byte/flambda.cmt as compiler-libs/flambda.cmt)
;    (.ocamloptcomp.objs/byte/flambda.cmti as compiler-libs/flambda.cmti)
;    (.ocamloptcomp.objs/byte/flambda_invariants.cmi as compiler-libs/flambda_invariants.cmi)
;    (.ocamloptcomp.objs/byte/flambda_invariants.cmo as compiler-libs/flambda_invariants.cmo)
;    (.ocamloptcomp.objs/byte/flambda_invariants.cmt as compiler-libs/flambda_invariants.cmt)
;    (.ocamloptcomp.objs/byte/flambda_invariants.cmti as compiler-libs/flambda_invariants.cmti)
;    (.ocamloptcomp.objs/byte/flambda_iterators.cmi as compiler-libs/flambda_iterators.cmi)
;    (.ocamloptcomp.objs/byte/flambda_iterators.cmo as compiler-libs/flambda_iterators.cmo)
;    (.ocamloptcomp.objs/byte/flambda_iterators.cmt as compiler-libs/flambda_iterators.cmt)
;    (.ocamloptcomp.objs/byte/flambda_iterators.cmti as compiler-libs/flambda_iterators.cmti)
;    (.ocamloptcomp.objs/byte/flambda_middle_end.cmi as compiler-libs/flambda_middle_end.cmi)
;    (.ocamloptcomp.objs/byte/flambda_middle_end.cmo as compiler-libs/flambda_middle_end.cmo)
;    (.ocamloptcomp.objs/byte/flambda_middle_end.cmt as compiler-libs/flambda_middle_end.cmt)
;    (.ocamloptcomp.objs/byte/flambda_middle_end.cmti as compiler-libs/flambda_middle_end.cmti)
;    (.ocamloptcomp.objs/byte/flambda_to_clambda.cmi as compiler-libs/flambda_to_clambda.cmi)
;    (.ocamloptcomp.objs/byte/flambda_to_clambda.cmo as compiler-libs/flambda_to_clambda.cmo)
;    (.ocamloptcomp.objs/byte/flambda_to_clambda.cmt as compiler-libs/flambda_to_clambda.cmt)
;    (.ocamloptcomp.objs/byte/flambda_to_clambda.cmti as compiler-libs/flambda_to_clambda.cmti)
;    (.ocamloptcomp.objs/byte/flambda_utils.cmi as compiler-libs/flambda_utils.cmi)
;    (.ocamloptcomp.objs/byte/flambda_utils.cmo as compiler-libs/flambda_utils.cmo)
;    (.ocamloptcomp.objs/byte/flambda_utils.cmt as compiler-libs/flambda_utils.cmt)
;    (.ocamloptcomp.objs/byte/flambda_utils.cmti as compiler-libs/flambda_utils.cmti)
;    (.ocamloptcomp.objs/byte/freshening.cmi as compiler-libs/freshening.cmi)
;    (.ocamloptcomp.objs/byte/freshening.cmo as compiler-libs/freshening.cmo)
;    (.ocamloptcomp.objs/byte/freshening.cmt as compiler-libs/freshening.cmt)
;    (.ocamloptcomp.objs/byte/freshening.cmti as compiler-libs/freshening.cmti)
;    (.ocamloptcomp.objs/byte/id_types.cmi as compiler-libs/id_types.cmi)
;    (.ocamloptcomp.objs/byte/id_types.cmo as compiler-libs/id_types.cmo)
;    (.ocamloptcomp.objs/byte/id_types.cmt as compiler-libs/id_types.cmt)
;    (.ocamloptcomp.objs/byte/id_types.cmti as compiler-libs/id_types.cmti)
;    (.ocamloptcomp.objs/byte/import_approx.cmi as compiler-libs/import_approx.cmi)
;    (.ocamloptcomp.objs/byte/import_approx.cmo as compiler-libs/import_approx.cmo)
;    (.ocamloptcomp.objs/byte/import_approx.cmt as compiler-libs/import_approx.cmt)
;    (.ocamloptcomp.objs/byte/import_approx.cmti as compiler-libs/import_approx.cmti)
;    (.ocamloptcomp.objs/byte/inconstant_idents.cmi as compiler-libs/inconstant_idents.cmi)
;    (.ocamloptcomp.objs/byte/inconstant_idents.cmo as compiler-libs/inconstant_idents.cmo)
;    (.ocamloptcomp.objs/byte/inconstant_idents.cmt as compiler-libs/inconstant_idents.cmt)
;    (.ocamloptcomp.objs/byte/inconstant_idents.cmti as compiler-libs/inconstant_idents.cmti)
;    (.ocamloptcomp.objs/byte/initialize_symbol_to_let_symbol.cmi as compiler-libs/initialize_symbol_to_let_symbol.cmi)
;    (.ocamloptcomp.objs/byte/initialize_symbol_to_let_symbol.cmo as compiler-libs/initialize_symbol_to_let_symbol.cmo)
;    (.ocamloptcomp.objs/byte/initialize_symbol_to_let_symbol.cmt as compiler-libs/initialize_symbol_to_let_symbol.cmt)
;    (.ocamloptcomp.objs/byte/initialize_symbol_to_let_symbol.cmti as compiler-libs/initialize_symbol_to_let_symbol.cmti)
;    (.ocamloptcomp.objs/byte/inline_and_simplify.cmi as compiler-libs/inline_and_simplify.cmi)
;    (.ocamloptcomp.objs/byte/inline_and_simplify.cmo as compiler-libs/inline_and_simplify.cmo)
;    (.ocamloptcomp.objs/byte/inline_and_simplify.cmt as compiler-libs/inline_and_simplify.cmt)
;    (.ocamloptcomp.objs/byte/inline_and_simplify.cmti as compiler-libs/inline_and_simplify.cmti)
;    (.ocamloptcomp.objs/byte/inline_and_simplify_aux.cmi as compiler-libs/inline_and_simplify_aux.cmi)
;    (.ocamloptcomp.objs/byte/inline_and_simplify_aux.cmo as compiler-libs/inline_and_simplify_aux.cmo)
;    (.ocamloptcomp.objs/byte/inline_and_simplify_aux.cmt as compiler-libs/inline_and_simplify_aux.cmt)
;    (.ocamloptcomp.objs/byte/inline_and_simplify_aux.cmti as compiler-libs/inline_and_simplify_aux.cmti)
;    (.ocamloptcomp.objs/byte/inlining_cost.cmi as compiler-libs/inlining_cost.cmi)
;    (.ocamloptcomp.objs/byte/inlining_cost.cmo as compiler-libs/inlining_cost.cmo)
;    (.ocamloptcomp.objs/byte/inlining_cost.cmt as compiler-libs/inlining_cost.cmt)
;    (.ocamloptcomp.objs/byte/inlining_cost.cmti as compiler-libs/inlining_cost.cmti)
;    (.ocamloptcomp.objs/byte/inlining_decision.cmi as compiler-libs/inlining_decision.cmi)
;    (.ocamloptcomp.objs/byte/inlining_decision.cmo as compiler-libs/inlining_decision.cmo)
;    (.ocamloptcomp.objs/byte/inlining_decision.cmt as compiler-libs/inlining_decision.cmt)
;    (.ocamloptcomp.objs/byte/inlining_decision.cmti as compiler-libs/inlining_decision.cmti)
;    (.ocamloptcomp.objs/byte/inlining_decision_intf.cmi as compiler-libs/inlining_decision_intf.cmi)
;    (.ocamloptcomp.objs/byte/inlining_decision_intf.cmti as compiler-libs/inlining_decision_intf.cmti)
;    (.ocamloptcomp.objs/byte/inlining_stats.cmi as compiler-libs/inlining_stats.cmi)
;    (.ocamloptcomp.objs/byte/inlining_stats.cmo as compiler-libs/inlining_stats.cmo)
;    (.ocamloptcomp.objs/byte/inlining_stats.cmt as compiler-libs/inlining_stats.cmt)
;    (.ocamloptcomp.objs/byte/inlining_stats.cmti as compiler-libs/inlining_stats.cmti)
;    (.ocamloptcomp.objs/byte/inlining_stats_types.cmi as compiler-libs/inlining_stats_types.cmi)
;    (.ocamloptcomp.objs/byte/inlining_stats_types.cmo as compiler-libs/inlining_stats_types.cmo)
;    (.ocamloptcomp.objs/byte/inlining_stats_types.cmt as compiler-libs/inlining_stats_types.cmt)
;    (.ocamloptcomp.objs/byte/inlining_stats_types.cmti as compiler-libs/inlining_stats_types.cmti)
;    (.ocamloptcomp.objs/byte/inlining_transforms.cmi as compiler-libs/inlining_transforms.cmi)
;    (.ocamloptcomp.objs/byte/inlining_transforms.cmo as compiler-libs/inlining_transforms.cmo)
;    (.ocamloptcomp.objs/byte/inlining_transforms.cmt as compiler-libs/inlining_transforms.cmt)
;    (.ocamloptcomp.objs/byte/inlining_transforms.cmti as compiler-libs/inlining_transforms.cmti)
;    (.ocamloptcomp.objs/byte/internal_variable_names.cmi as compiler-libs/internal_variable_names.cmi)
;    (.ocamloptcomp.objs/byte/internal_variable_names.cmo as compiler-libs/internal_variable_names.cmo)
;    (.ocamloptcomp.objs/byte/internal_variable_names.cmt as compiler-libs/internal_variable_names.cmt)
;    (.ocamloptcomp.objs/byte/internal_variable_names.cmti as compiler-libs/internal_variable_names.cmti)
;    (.ocamloptcomp.objs/byte/invariant_params.cmi as compiler-libs/invariant_params.cmi)
;    (.ocamloptcomp.objs/byte/invariant_params.cmo as compiler-libs/invariant_params.cmo)
;    (.ocamloptcomp.objs/byte/invariant_params.cmt as compiler-libs/invariant_params.cmt)
;    (.ocamloptcomp.objs/byte/invariant_params.cmti as compiler-libs/invariant_params.cmti)
;    (.ocamloptcomp.objs/byte/lift_code.cmi as compiler-libs/lift_code.cmi)
;    (.ocamloptcomp.objs/byte/lift_code.cmo as compiler-libs/lift_code.cmo)
;    (.ocamloptcomp.objs/byte/lift_code.cmt as compiler-libs/lift_code.cmt)
;    (.ocamloptcomp.objs/byte/lift_code.cmti as compiler-libs/lift_code.cmti)
;    (.ocamloptcomp.objs/byte/lift_constants.cmi as compiler-libs/lift_constants.cmi)
;    (.ocamloptcomp.objs/byte/lift_constants.cmo as compiler-libs/lift_constants.cmo)
;    (.ocamloptcomp.objs/byte/lift_constants.cmt as compiler-libs/lift_constants.cmt)
;    (.ocamloptcomp.objs/byte/lift_constants.cmti as compiler-libs/lift_constants.cmti)
;    (.ocamloptcomp.objs/byte/lift_let_to_initialize_symbol.cmi as compiler-libs/lift_let_to_initialize_symbol.cmi)
;    (.ocamloptcomp.objs/byte/lift_let_to_initialize_symbol.cmo as compiler-libs/lift_let_to_initialize_symbol.cmo)
;    (.ocamloptcomp.objs/byte/lift_let_to_initialize_symbol.cmt as compiler-libs/lift_let_to_initialize_symbol.cmt)
;    (.ocamloptcomp.objs/byte/lift_let_to_initialize_symbol.cmti as compiler-libs/lift_let_to_initialize_symbol.cmti)
;    (.ocamloptcomp.objs/byte/linkage_name.cmi as compiler-libs/linkage_name.cmi)
;    (.ocamloptcomp.objs/byte/linkage_name.cmo as compiler-libs/linkage_name.cmo)
;    (.ocamloptcomp.objs/byte/linkage_name.cmt as compiler-libs/linkage_name.cmt)
;    (.ocamloptcomp.objs/byte/linkage_name.cmti as compiler-libs/linkage_name.cmti)
;    (.ocamloptcomp.objs/byte/mutable_variable.cmi as compiler-libs/mutable_variable.cmi)
;    (.ocamloptcomp.objs/byte/mutable_variable.cmo as compiler-libs/mutable_variable.cmo)
;    (.ocamloptcomp.objs/byte/mutable_variable.cmt as compiler-libs/mutable_variable.cmt)
;    (.ocamloptcomp.objs/byte/mutable_variable.cmti as compiler-libs/mutable_variable.cmti)
;    (.ocamloptcomp.objs/byte/parameter.cmi as compiler-libs/parameter.cmi)
;    (.ocamloptcomp.objs/byte/parameter.cmo as compiler-libs/parameter.cmo)
;    (.ocamloptcomp.objs/byte/parameter.cmt as compiler-libs/parameter.cmt)
;    (.ocamloptcomp.objs/byte/parameter.cmti as compiler-libs/parameter.cmti)
;    (.ocamloptcomp.objs/byte/pass_wrapper.cmi as compiler-libs/pass_wrapper.cmi)
;    (.ocamloptcomp.objs/byte/pass_wrapper.cmo as compiler-libs/pass_wrapper.cmo)
;    (.ocamloptcomp.objs/byte/pass_wrapper.cmt as compiler-libs/pass_wrapper.cmt)
;    (.ocamloptcomp.objs/byte/pass_wrapper.cmti as compiler-libs/pass_wrapper.cmti)
;    (.ocamloptcomp.objs/byte/printclambda.cmi as compiler-libs/printclambda.cmi)
;    (.ocamloptcomp.objs/byte/printclambda.cmo as compiler-libs/printclambda.cmo)
;    (.ocamloptcomp.objs/byte/printclambda.cmt as compiler-libs/printclambda.cmt)
;    (.ocamloptcomp.objs/byte/printclambda.cmti as compiler-libs/printclambda.cmti)
;    (.ocamloptcomp.objs/byte/printclambda_primitives.cmi as compiler-libs/printclambda_primitives.cmi)
;    (.ocamloptcomp.objs/byte/printclambda_primitives.cmo as compiler-libs/printclambda_primitives.cmo)
;    (.ocamloptcomp.objs/byte/printclambda_primitives.cmt as compiler-libs/printclambda_primitives.cmt)
;    (.ocamloptcomp.objs/byte/printclambda_primitives.cmti as compiler-libs/printclambda_primitives.cmti)
;    (.ocamloptcomp.objs/byte/projection.cmi as compiler-libs/projection.cmi)
;    (.ocamloptcomp.objs/byte/projection.cmo as compiler-libs/projection.cmo)
;    (.ocamloptcomp.objs/byte/projection.cmt as compiler-libs/projection.cmt)
;    (.ocamloptcomp.objs/byte/projection.cmti as compiler-libs/projection.cmti)
;    (.ocamloptcomp.objs/byte/ref_to_variables.cmi as compiler-libs/ref_to_variables.cmi)
;    (.ocamloptcomp.objs/byte/ref_to_variables.cmo as compiler-libs/ref_to_variables.cmo)
;    (.ocamloptcomp.objs/byte/ref_to_variables.cmt as compiler-libs/ref_to_variables.cmt)
;    (.ocamloptcomp.objs/byte/ref_to_variables.cmti as compiler-libs/ref_to_variables.cmti)
;    (.ocamloptcomp.objs/byte/remove_free_vars_equal_to_args.cmi as compiler-libs/remove_free_vars_equal_to_args.cmi)
;    (.ocamloptcomp.objs/byte/remove_free_vars_equal_to_args.cmo as compiler-libs/remove_free_vars_equal_to_args.cmo)
;    (.ocamloptcomp.objs/byte/remove_free_vars_equal_to_args.cmt as compiler-libs/remove_free_vars_equal_to_args.cmt)
;    (.ocamloptcomp.objs/byte/remove_free_vars_equal_to_args.cmti as compiler-libs/remove_free_vars_equal_to_args.cmti)
;    (.ocamloptcomp.objs/byte/remove_unused_arguments.cmi as compiler-libs/remove_unused_arguments.cmi)
;    (.ocamloptcomp.objs/byte/remove_unused_arguments.cmo as compiler-libs/remove_unused_arguments.cmo)
;    (.ocamloptcomp.objs/byte/remove_unused_arguments.cmt as compiler-libs/remove_unused_arguments.cmt)
;    (.ocamloptcomp.objs/byte/remove_unused_arguments.cmti as compiler-libs/remove_unused_arguments.cmti)
;    (.ocamloptcomp.objs/byte/remove_unused_closure_vars.cmi as compiler-libs/remove_unused_closure_vars.cmi)
;    (.ocamloptcomp.objs/byte/remove_unused_closure_vars.cmo as compiler-libs/remove_unused_closure_vars.cmo)
;    (.ocamloptcomp.objs/byte/remove_unused_closure_vars.cmt as compiler-libs/remove_unused_closure_vars.cmt)
;    (.ocamloptcomp.objs/byte/remove_unused_closure_vars.cmti as compiler-libs/remove_unused_closure_vars.cmti)
;    (.ocamloptcomp.objs/byte/remove_unused_program_constructs.cmi as compiler-libs/remove_unused_program_constructs.cmi)
;    (.ocamloptcomp.objs/byte/remove_unused_program_constructs.cmo as compiler-libs/remove_unused_program_constructs.cmo)
;    (.ocamloptcomp.objs/byte/remove_unused_program_constructs.cmt as compiler-libs/remove_unused_program_constructs.cmt)
;    (.ocamloptcomp.objs/byte/remove_unused_program_constructs.cmti as compiler-libs/remove_unused_program_constructs.cmti)
;    (.ocamloptcomp.objs/byte/semantics_of_primitives.cmi as compiler-libs/semantics_of_primitives.cmi)
;    (.ocamloptcomp.objs/byte/semantics_of_primitives.cmo as compiler-libs/semantics_of_primitives.cmo)
;    (.ocamloptcomp.objs/byte/semantics_of_primitives.cmt as compiler-libs/semantics_of_primitives.cmt)
;    (.ocamloptcomp.objs/byte/semantics_of_primitives.cmti as compiler-libs/semantics_of_primitives.cmti)
;    (.ocamloptcomp.objs/byte/set_of_closures_id.cmi as compiler-libs/set_of_closures_id.cmi)
;    (.ocamloptcomp.objs/byte/set_of_closures_id.cmo as compiler-libs/set_of_closures_id.cmo)
;    (.ocamloptcomp.objs/byte/set_of_closures_id.cmt as compiler-libs/set_of_closures_id.cmt)
;    (.ocamloptcomp.objs/byte/set_of_closures_id.cmti as compiler-libs/set_of_closures_id.cmti)
;    (.ocamloptcomp.objs/byte/set_of_closures_origin.cmi as compiler-libs/set_of_closures_origin.cmi)
;    (.ocamloptcomp.objs/byte/set_of_closures_origin.cmo as compiler-libs/set_of_closures_origin.cmo)
;    (.ocamloptcomp.objs/byte/set_of_closures_origin.cmt as compiler-libs/set_of_closures_origin.cmt)
;    (.ocamloptcomp.objs/byte/set_of_closures_origin.cmti as compiler-libs/set_of_closures_origin.cmti)
;    (.ocamloptcomp.objs/byte/share_constants.cmi as compiler-libs/share_constants.cmi)
;    (.ocamloptcomp.objs/byte/share_constants.cmo as compiler-libs/share_constants.cmo)
;    (.ocamloptcomp.objs/byte/share_constants.cmt as compiler-libs/share_constants.cmt)
;    (.ocamloptcomp.objs/byte/share_constants.cmti as compiler-libs/share_constants.cmti)
;    (.ocamloptcomp.objs/byte/simple_value_approx.cmi as compiler-libs/simple_value_approx.cmi)
;    (.ocamloptcomp.objs/byte/simple_value_approx.cmo as compiler-libs/simple_value_approx.cmo)
;    (.ocamloptcomp.objs/byte/simple_value_approx.cmt as compiler-libs/simple_value_approx.cmt)
;    (.ocamloptcomp.objs/byte/simple_value_approx.cmti as compiler-libs/simple_value_approx.cmti)
;    (.ocamloptcomp.objs/byte/simplify_boxed_integer_ops.cmi as compiler-libs/simplify_boxed_integer_ops.cmi)
;    (.ocamloptcomp.objs/byte/simplify_boxed_integer_ops.cmo as compiler-libs/simplify_boxed_integer_ops.cmo)
;    (.ocamloptcomp.objs/byte/simplify_boxed_integer_ops.cmt as compiler-libs/simplify_boxed_integer_ops.cmt)
;    (.ocamloptcomp.objs/byte/simplify_boxed_integer_ops.cmti as compiler-libs/simplify_boxed_integer_ops.cmti)
;    (.ocamloptcomp.objs/byte/simplify_boxed_integer_ops_intf.cmi as compiler-libs/simplify_boxed_integer_ops_intf.cmi)
;    (.ocamloptcomp.objs/byte/simplify_boxed_integer_ops_intf.cmti as compiler-libs/simplify_boxed_integer_ops_intf.cmti)
;    (.ocamloptcomp.objs/byte/simplify_common.cmi as compiler-libs/simplify_common.cmi)
;    (.ocamloptcomp.objs/byte/simplify_common.cmo as compiler-libs/simplify_common.cmo)
;    (.ocamloptcomp.objs/byte/simplify_common.cmt as compiler-libs/simplify_common.cmt)
;    (.ocamloptcomp.objs/byte/simplify_common.cmti as compiler-libs/simplify_common.cmti)
;    (.ocamloptcomp.objs/byte/simplify_primitives.cmi as compiler-libs/simplify_primitives.cmi)
;    (.ocamloptcomp.objs/byte/simplify_primitives.cmo as compiler-libs/simplify_primitives.cmo)
;    (.ocamloptcomp.objs/byte/simplify_primitives.cmt as compiler-libs/simplify_primitives.cmt)
;    (.ocamloptcomp.objs/byte/simplify_primitives.cmti as compiler-libs/simplify_primitives.cmti)
;    (.ocamloptcomp.objs/byte/static_exception.cmi as compiler-libs/static_exception.cmi)
;    (.ocamloptcomp.objs/byte/static_exception.cmo as compiler-libs/static_exception.cmo)
;    (.ocamloptcomp.objs/byte/static_exception.cmt as compiler-libs/static_exception.cmt)
;    (.ocamloptcomp.objs/byte/static_exception.cmti as compiler-libs/static_exception.cmti)
;    (.ocamloptcomp.objs/byte/symbol.cmi as compiler-libs/symbol.cmi)
;    (.ocamloptcomp.objs/byte/symbol.cmo as compiler-libs/symbol.cmo)
;    (.ocamloptcomp.objs/byte/symbol.cmt as compiler-libs/symbol.cmt)
;    (.ocamloptcomp.objs/byte/symbol.cmti as compiler-libs/symbol.cmti)
;    (.ocamloptcomp.objs/byte/tag.cmi as compiler-libs/tag.cmi)
;    (.ocamloptcomp.objs/byte/tag.cmo as compiler-libs/tag.cmo)
;    (.ocamloptcomp.objs/byte/tag.cmt as compiler-libs/tag.cmt)
;    (.ocamloptcomp.objs/byte/tag.cmti as compiler-libs/tag.cmti)
;    (.ocamloptcomp.objs/byte/traverse_for_exported_symbols.cmi as compiler-libs/traverse_for_exported_symbols.cmi)
;    (.ocamloptcomp.objs/byte/traverse_for_exported_symbols.cmo as compiler-libs/traverse_for_exported_symbols.cmo)
;    (.ocamloptcomp.objs/byte/traverse_for_exported_symbols.cmt as compiler-libs/traverse_for_exported_symbols.cmt)
;    (.ocamloptcomp.objs/byte/traverse_for_exported_symbols.cmti as compiler-libs/traverse_for_exported_symbols.cmti)
;    (.ocamloptcomp.objs/byte/un_anf.cmi as compiler-libs/un_anf.cmi)
;    (.ocamloptcomp.objs/byte/un_anf.cmo as compiler-libs/un_anf.cmo)
;    (.ocamloptcomp.objs/byte/un_anf.cmt as compiler-libs/un_anf.cmt)
;    (.ocamloptcomp.objs/byte/un_anf.cmti as compiler-libs/un_anf.cmti)
;    (.ocamloptcomp.objs/byte/unbox_closures.cmi as compiler-libs/unbox_closures.cmi)
;    (.ocamloptcomp.objs/byte/unbox_closures.cmo as compiler-libs/unbox_closures.cmo)
;    (.ocamloptcomp.objs/byte/unbox_closures.cmt as compiler-libs/unbox_closures.cmt)
;    (.ocamloptcomp.objs/byte/unbox_closures.cmti as compiler-libs/unbox_closures.cmti)
;    (.ocamloptcomp.objs/byte/unbox_free_vars_of_closures.cmi as compiler-libs/unbox_free_vars_of_closures.cmi)
;    (.ocamloptcomp.objs/byte/unbox_free_vars_of_closures.cmo as compiler-libs/unbox_free_vars_of_closures.cmo)
;    (.ocamloptcomp.objs/byte/unbox_free_vars_of_closures.cmt as compiler-libs/unbox_free_vars_of_closures.cmt)
;    (.ocamloptcomp.objs/byte/unbox_free_vars_of_closures.cmti as compiler-libs/unbox_free_vars_of_closures.cmti)
;    (.ocamloptcomp.objs/byte/unbox_specialised_args.cmi as compiler-libs/unbox_specialised_args.cmi)
;    (.ocamloptcomp.objs/byte/unbox_specialised_args.cmo as compiler-libs/unbox_specialised_args.cmo)
;    (.ocamloptcomp.objs/byte/unbox_specialised_args.cmt as compiler-libs/unbox_specialised_args.cmt)
;    (.ocamloptcomp.objs/byte/unbox_specialised_args.cmti as compiler-libs/unbox_specialised_args.cmti)
;    (.ocamloptcomp.objs/byte/var_within_closure.cmi as compiler-libs/var_within_closure.cmi)
;    (.ocamloptcomp.objs/byte/var_within_closure.cmo as compiler-libs/var_within_closure.cmo)
;    (.ocamloptcomp.objs/byte/var_within_closure.cmt as compiler-libs/var_within_closure.cmt)
;    (.ocamloptcomp.objs/byte/var_within_closure.cmti as compiler-libs/var_within_closure.cmti)
;    (.ocamloptcomp.objs/byte/variable.cmi as compiler-libs/variable.cmi)
;    (.ocamloptcomp.objs/byte/variable.cmo as compiler-libs/variable.cmo)
;    (.ocamloptcomp.objs/byte/variable.cmt as compiler-libs/variable.cmt)
;    (.ocamloptcomp.objs/byte/variable.cmti as compiler-libs/variable.cmti)
;    (.ocamloptcomp.objs/native/alias_analysis.cmx as compiler-libs/alias_analysis.cmx)
;    (.ocamloptcomp.objs/native/allocated_const.cmx as compiler-libs/allocated_const.cmx)
;    (.ocamloptcomp.objs/native/augment_specialised_args.cmx as compiler-libs/augment_specialised_args.cmx)
;    (.ocamloptcomp.objs/native/backend_var.cmx as compiler-libs/backend_var.cmx)
;    (.ocamloptcomp.objs/native/build_export_info.cmx as compiler-libs/build_export_info.cmx)
;    (.ocamloptcomp.objs/native/clambda.cmx as compiler-libs/clambda.cmx)
;    (.ocamloptcomp.objs/native/clambda_primitives.cmx as compiler-libs/clambda_primitives.cmx)
;    (.ocamloptcomp.objs/native/closure.cmx as compiler-libs/closure.cmx)
;    (.ocamloptcomp.objs/native/closure_conversion.cmx as compiler-libs/closure_conversion.cmx)
;    (.ocamloptcomp.objs/native/closure_conversion_aux.cmx as compiler-libs/closure_conversion_aux.cmx)
;    (.ocamloptcomp.objs/native/closure_element.cmx as compiler-libs/closure_element.cmx)
;    (.ocamloptcomp.objs/native/closure_id.cmx as compiler-libs/closure_id.cmx)
;    (.ocamloptcomp.objs/native/closure_middle_end.cmx as compiler-libs/closure_middle_end.cmx)
;    (.ocamloptcomp.objs/native/closure_offsets.cmx as compiler-libs/closure_offsets.cmx)
;    (.ocamloptcomp.objs/native/closure_origin.cmx as compiler-libs/closure_origin.cmx)
;    (.ocamloptcomp.objs/native/compilation_unit.cmx as compiler-libs/compilation_unit.cmx)
;    (.ocamloptcomp.objs/native/compilenv.cmx as compiler-libs/compilenv.cmx)
;    (.ocamloptcomp.objs/native/convert_primitives.cmx as compiler-libs/convert_primitives.cmx)
;    (.ocamloptcomp.objs/native/effect_analysis.cmx as compiler-libs/effect_analysis.cmx)
;    (.ocamloptcomp.objs/native/export_id.cmx as compiler-libs/export_id.cmx)
;    (.ocamloptcomp.objs/native/export_info.cmx as compiler-libs/export_info.cmx)
;    (.ocamloptcomp.objs/native/export_info_for_pack.cmx as compiler-libs/export_info_for_pack.cmx)
;    (.ocamloptcomp.objs/native/extract_projections.cmx as compiler-libs/extract_projections.cmx)
;    (.ocamloptcomp.objs/native/find_recursive_functions.cmx as compiler-libs/find_recursive_functions.cmx)
;    (.ocamloptcomp.objs/native/flambda.cmx as compiler-libs/flambda.cmx)
;    (.ocamloptcomp.objs/native/flambda_invariants.cmx as compiler-libs/flambda_invariants.cmx)
;    (.ocamloptcomp.objs/native/flambda_iterators.cmx as compiler-libs/flambda_iterators.cmx)
;    (.ocamloptcomp.objs/native/flambda_middle_end.cmx as compiler-libs/flambda_middle_end.cmx)
;    (.ocamloptcomp.objs/native/flambda_to_clambda.cmx as compiler-libs/flambda_to_clambda.cmx)
;    (.ocamloptcomp.objs/native/flambda_utils.cmx as compiler-libs/flambda_utils.cmx)
;    (.ocamloptcomp.objs/native/freshening.cmx as compiler-libs/freshening.cmx)
;    (.ocamloptcomp.objs/native/id_types.cmx as compiler-libs/id_types.cmx)
;    (.ocamloptcomp.objs/native/import_approx.cmx as compiler-libs/import_approx.cmx)
;    (.ocamloptcomp.objs/native/inconstant_idents.cmx as compiler-libs/inconstant_idents.cmx)
;    (.ocamloptcomp.objs/native/initialize_symbol_to_let_symbol.cmx as compiler-libs/initialize_symbol_to_let_symbol.cmx)
;    (.ocamloptcomp.objs/native/inline_and_simplify.cmx as compiler-libs/inline_and_simplify.cmx)
;    (.ocamloptcomp.objs/native/inline_and_simplify_aux.cmx as compiler-libs/inline_and_simplify_aux.cmx)
;    (.ocamloptcomp.objs/native/inlining_cost.cmx as compiler-libs/inlining_cost.cmx)
;    (.ocamloptcomp.objs/native/inlining_decision.cmx as compiler-libs/inlining_decision.cmx)
;    (.ocamloptcomp.objs/native/inlining_stats.cmx as compiler-libs/inlining_stats.cmx)
;    (.ocamloptcomp.objs/native/inlining_stats_types.cmx as compiler-libs/inlining_stats_types.cmx)
;    (.ocamloptcomp.objs/native/inlining_transforms.cmx as compiler-libs/inlining_transforms.cmx)
;    (.ocamloptcomp.objs/native/internal_variable_names.cmx as compiler-libs/internal_variable_names.cmx)
;    (.ocamloptcomp.objs/native/invariant_params.cmx as compiler-libs/invariant_params.cmx)
;    (.ocamloptcomp.objs/native/lift_code.cmx as compiler-libs/lift_code.cmx)
;    (.ocamloptcomp.objs/native/lift_constants.cmx as compiler-libs/lift_constants.cmx)
;    (.ocamloptcomp.objs/native/lift_let_to_initialize_symbol.cmx as compiler-libs/lift_let_to_initialize_symbol.cmx)
;    (.ocamloptcomp.objs/native/linkage_name.cmx as compiler-libs/linkage_name.cmx)
;    (.ocamloptcomp.objs/native/mutable_variable.cmx as compiler-libs/mutable_variable.cmx)
;    (.ocamloptcomp.objs/native/parameter.cmx as compiler-libs/parameter.cmx)
;    (.ocamloptcomp.objs/native/pass_wrapper.cmx as compiler-libs/pass_wrapper.cmx)
;    (.ocamloptcomp.objs/native/printclambda.cmx as compiler-libs/printclambda.cmx)
;    (.ocamloptcomp.objs/native/printclambda_primitives.cmx as compiler-libs/printclambda_primitives.cmx)
;    (.ocamloptcomp.objs/native/projection.cmx as compiler-libs/projection.cmx)
;    (.ocamloptcomp.objs/native/ref_to_variables.cmx as compiler-libs/ref_to_variables.cmx)
;    (.ocamloptcomp.objs/native/remove_free_vars_equal_to_args.cmx as compiler-libs/remove_free_vars_equal_to_args.cmx)
;    (.ocamloptcomp.objs/native/remove_unused_arguments.cmx as compiler-libs/remove_unused_arguments.cmx)
;    (.ocamloptcomp.objs/native/remove_unused_closure_vars.cmx as compiler-libs/remove_unused_closure_vars.cmx)
;    (.ocamloptcomp.objs/native/remove_unused_program_constructs.cmx as compiler-libs/remove_unused_program_constructs.cmx)
;    (.ocamloptcomp.objs/native/semantics_of_primitives.cmx as compiler-libs/semantics_of_primitives.cmx)
;    (.ocamloptcomp.objs/native/set_of_closures_id.cmx as compiler-libs/set_of_closures_id.cmx)
;    (.ocamloptcomp.objs/native/set_of_closures_origin.cmx as compiler-libs/set_of_closures_origin.cmx)
;    (.ocamloptcomp.objs/native/share_constants.cmx as compiler-libs/share_constants.cmx)
;    (.ocamloptcomp.objs/native/simple_value_approx.cmx as compiler-libs/simple_value_approx.cmx)
;    (.ocamloptcomp.objs/native/simplify_boxed_integer_ops.cmx as compiler-libs/simplify_boxed_integer_ops.cmx)
;    (.ocamloptcomp.objs/native/simplify_common.cmx as compiler-libs/simplify_common.cmx)
;    (.ocamloptcomp.objs/native/simplify_primitives.cmx as compiler-libs/simplify_primitives.cmx)
;    (.ocamloptcomp.objs/native/static_exception.cmx as compiler-libs/static_exception.cmx)
;    (.ocamloptcomp.objs/native/symbol.cmx as compiler-libs/symbol.cmx)
;    (.ocamloptcomp.objs/native/tag.cmx as compiler-libs/tag.cmx)
;    (.ocamloptcomp.objs/native/traverse_for_exported_symbols.cmx as compiler-libs/traverse_for_exported_symbols.cmx)
;    (.ocamloptcomp.objs/native/un_anf.cmx as compiler-libs/un_anf.cmx)
;    (.ocamloptcomp.objs/native/unbox_closures.cmx as compiler-libs/unbox_closures.cmx)
;    (.ocamloptcomp.objs/native/unbox_free_vars_of_closures.cmx as compiler-libs/unbox_free_vars_of_closures.cmx)
;    (.ocamloptcomp.objs/native/unbox_specialised_args.cmx as compiler-libs/unbox_specialised_args.cmx)
;    (.ocamloptcomp.objs/native/var_within_closure.cmx as compiler-libs/var_within_closure.cmx)
;    (.ocamloptcomp.objs/native/variable.cmx as compiler-libs/variable.cmx)
;  ))

(install
  (section lib)
  (package ocaml)
  (files
    (config.mli as compiler-libs/config.mli)
    (build_path_prefix_map.mli as compiler-libs/build_path_prefix_map.mli)
    (misc.mli as compiler-libs/misc.mli)
    (identifiable.mli as compiler-libs/identifiable.mli)
    (numbers.mli as compiler-libs/numbers.mli)
    (arg_helper.mli as compiler-libs/arg_helper.mli)
    (clflags.mli as compiler-libs/clflags.mli)
    (profile.mli as compiler-libs/profile.mli)
    (terminfo.mli as compiler-libs/terminfo.mli)
    (ccomp.mli as compiler-libs/ccomp.mli)
    (warnings.mli as compiler-libs/warnings.mli)
    (consistbl.mli as compiler-libs/consistbl.mli)
    (strongly_connected_components.mli as compiler-libs/strongly_connected_components.mli)
    (targetint.mli as compiler-libs/targetint.mli)
    (load_path.mli as compiler-libs/load_path.mli)
    (int_replace_polymorphic_compare.mli as compiler-libs/int_replace_polymorphic_compare.mli)
    (location.mli as compiler-libs/location.mli)
    (longident.mli as compiler-libs/longident.mli)
    (docstrings.mli as compiler-libs/docstrings.mli)
    (syntaxerr.mli as compiler-libs/syntaxerr.mli)
    (ast_helper.mli as compiler-libs/ast_helper.mli)
    (camlinternalMenhirLib.mli as compiler-libs/camlinternalMenhirLib.mli)
    (parser.mli as compiler-libs/parser.mli)
    (lexer.mli as compiler-libs/lexer.mli)
    (parse.mli as compiler-libs/parse.mli)
    (printast.mli as compiler-libs/printast.mli)
    (pprintast.mli as compiler-libs/pprintast.mli)
    (ast_mapper.mli as compiler-libs/ast_mapper.mli)
    (ast_iterator.mli as compiler-libs/ast_iterator.mli)
    (attr_helper.mli as compiler-libs/attr_helper.mli)
    (builtin_attributes.mli as compiler-libs/builtin_attributes.mli)
    (ast_invariants.mli as compiler-libs/ast_invariants.mli)
    (depend.mli as compiler-libs/depend.mli)
    (asttypes.mli as compiler-libs/asttypes.mli)
    (parsetree.mli as compiler-libs/parsetree.mli)
    (ident.mli as compiler-libs/ident.mli)
    (path.mli as compiler-libs/path.mli)
    (primitive.mli as compiler-libs/primitive.mli)
    (types.mli as compiler-libs/types.mli)
    (btype.mli as compiler-libs/btype.mli)
    (oprint.mli as compiler-libs/oprint.mli)
    (subst.mli as compiler-libs/subst.mli)
    (predef.mli as compiler-libs/predef.mli)
    (datarepr.mli as compiler-libs/datarepr.mli)
    (cmi_format.mli as compiler-libs/cmi_format.mli)
    (persistent_env.mli as compiler-libs/persistent_env.mli)
    (env.mli as compiler-libs/env.mli)
    (type_immediacy.mli as compiler-libs/type_immediacy.mli)
    (typedtree.mli as compiler-libs/typedtree.mli)
    (printtyped.mli as compiler-libs/printtyped.mli)
    (ctype.mli as compiler-libs/ctype.mli)
    (printtyp.mli as compiler-libs/printtyp.mli)
    (includeclass.mli as compiler-libs/includeclass.mli)
    (mtype.mli as compiler-libs/mtype.mli)
    (envaux.mli as compiler-libs/envaux.mli)
    (includecore.mli as compiler-libs/includecore.mli)
    (tast_iterator.mli as compiler-libs/tast_iterator.mli)
    (tast_mapper.mli as compiler-libs/tast_mapper.mli)
    (cmt_format.mli as compiler-libs/cmt_format.mli)
    (untypeast.mli as compiler-libs/untypeast.mli)
    (includemod.mli as compiler-libs/includemod.mli)
    (typetexp.mli as compiler-libs/typetexp.mli)
    (printpat.mli as compiler-libs/printpat.mli)
    (parmatch.mli as compiler-libs/parmatch.mli)
    (stypes.mli as compiler-libs/stypes.mli)
    (typedecl.mli as compiler-libs/typedecl.mli)
    (typeopt.mli as compiler-libs/typeopt.mli)
    (rec_check.mli as compiler-libs/rec_check.mli)
    (typecore.mli as compiler-libs/typecore.mli)
    (typeclass.mli as compiler-libs/typeclass.mli)
    (typemod.mli as compiler-libs/typemod.mli)
    (typedecl_variance.mli as compiler-libs/typedecl_variance.mli)
    (typedecl_properties.mli as compiler-libs/typedecl_properties.mli)
    (typedecl_immediacy.mli as compiler-libs/typedecl_immediacy.mli)
    (typedecl_unboxed.mli as compiler-libs/typedecl_unboxed.mli)
    (typedecl_separability.mli as compiler-libs/typedecl_separability.mli)
    (annot.mli as compiler-libs/annot.mli)
    (outcometree.mli as compiler-libs/outcometree.mli)
    (debuginfo.mli as compiler-libs/debuginfo.mli)
    (lambda.mli as compiler-libs/lambda.mli)
    (matching.mli as compiler-libs/matching.mli)
    (printlambda.mli as compiler-libs/printlambda.mli)
    (runtimedef.mli as compiler-libs/runtimedef.mli)
    (simplif.mli as compiler-libs/simplif.mli)
    (switch.mli as compiler-libs/switch.mli)
    (translattribute.mli as compiler-libs/translattribute.mli)
    (translclass.mli as compiler-libs/translclass.mli)
    (translcore.mli as compiler-libs/translcore.mli)
    (translmod.mli as compiler-libs/translmod.mli)
    (translobj.mli as compiler-libs/translobj.mli)
    (translprim.mli as compiler-libs/translprim.mli)
    (meta.mli as compiler-libs/meta.mli)
    (bytesections.mli as compiler-libs/bytesections.mli)
    (dll.mli as compiler-libs/dll.mli)
    (symtable.mli as compiler-libs/symtable.mli)
    (pparse.mli as compiler-libs/pparse.mli)
    (main_args.mli as compiler-libs/main_args.mli)
    (compenv.mli as compiler-libs/compenv.mli)
    (compmisc.mli as compiler-libs/compmisc.mli)
    (makedepend.mli as compiler-libs/makedepend.mli)
    (compile_common.mli as compiler-libs/compile_common.mli)
    (cmo_format.mli as compiler-libs/cmo_format.mli)
    (debug_event.mli as compiler-libs/debug_event.mli)
    (domainstate.mli as compiler-libs/domainstate.mli)

    (.ocamlcommon.objs/byte/annot.cmi as compiler-libs/annot.cmi)
    (.ocamlcommon.objs/byte/annot.cmti as compiler-libs/annot.cmti)
    (.ocamlcommon.objs/byte/arg_helper.cmi as compiler-libs/arg_helper.cmi)
    (.ocamlcommon.objs/byte/arg_helper.cmo as compiler-libs/arg_helper.cmo)
    (.ocamlcommon.objs/byte/arg_helper.cmt as compiler-libs/arg_helper.cmt)
    (.ocamlcommon.objs/byte/arg_helper.cmti as compiler-libs/arg_helper.cmti)
    (.ocamlcommon.objs/byte/ast_helper.cmi as compiler-libs/ast_helper.cmi)
    (.ocamlcommon.objs/byte/ast_helper.cmo as compiler-libs/ast_helper.cmo)
    (.ocamlcommon.objs/byte/ast_helper.cmt as compiler-libs/ast_helper.cmt)
    (.ocamlcommon.objs/byte/ast_helper.cmti as compiler-libs/ast_helper.cmti)
    (.ocamlcommon.objs/byte/ast_invariants.cmi as compiler-libs/ast_invariants.cmi)
    (.ocamlcommon.objs/byte/ast_invariants.cmo as compiler-libs/ast_invariants.cmo)
    (.ocamlcommon.objs/byte/ast_invariants.cmt as compiler-libs/ast_invariants.cmt)
    (.ocamlcommon.objs/byte/ast_invariants.cmti as compiler-libs/ast_invariants.cmti)
    (.ocamlcommon.objs/byte/ast_iterator.cmi as compiler-libs/ast_iterator.cmi)
    (.ocamlcommon.objs/byte/ast_iterator.cmo as compiler-libs/ast_iterator.cmo)
    (.ocamlcommon.objs/byte/ast_iterator.cmt as compiler-libs/ast_iterator.cmt)
    (.ocamlcommon.objs/byte/ast_iterator.cmti as compiler-libs/ast_iterator.cmti)
    (.ocamlcommon.objs/byte/ast_mapper.cmi as compiler-libs/ast_mapper.cmi)
    (.ocamlcommon.objs/byte/ast_mapper.cmo as compiler-libs/ast_mapper.cmo)
    (.ocamlcommon.objs/byte/ast_mapper.cmt as compiler-libs/ast_mapper.cmt)
    (.ocamlcommon.objs/byte/ast_mapper.cmti as compiler-libs/ast_mapper.cmti)
    (.ocamlcommon.objs/byte/asttypes.cmi as compiler-libs/asttypes.cmi)
    (.ocamlcommon.objs/byte/asttypes.cmti as compiler-libs/asttypes.cmti)
    (.ocamlcommon.objs/byte/attr_helper.cmi as compiler-libs/attr_helper.cmi)
    (.ocamlcommon.objs/byte/attr_helper.cmo as compiler-libs/attr_helper.cmo)
    (.ocamlcommon.objs/byte/attr_helper.cmt as compiler-libs/attr_helper.cmt)
    (.ocamlcommon.objs/byte/attr_helper.cmti as compiler-libs/attr_helper.cmti)
    (.ocamlcommon.objs/byte/btype.cmi as compiler-libs/btype.cmi)
    (.ocamlcommon.objs/byte/btype.cmo as compiler-libs/btype.cmo)
    (.ocamlcommon.objs/byte/btype.cmt as compiler-libs/btype.cmt)
    (.ocamlcommon.objs/byte/btype.cmti as compiler-libs/btype.cmti)
    (.ocamlcommon.objs/byte/build_path_prefix_map.cmi as compiler-libs/build_path_prefix_map.cmi)
    (.ocamlcommon.objs/byte/build_path_prefix_map.cmo as compiler-libs/build_path_prefix_map.cmo)
    (.ocamlcommon.objs/byte/build_path_prefix_map.cmt as compiler-libs/build_path_prefix_map.cmt)
    (.ocamlcommon.objs/byte/build_path_prefix_map.cmti as compiler-libs/build_path_prefix_map.cmti)
    (.ocamlcommon.objs/byte/builtin_attributes.cmi as compiler-libs/builtin_attributes.cmi)
    (.ocamlcommon.objs/byte/builtin_attributes.cmo as compiler-libs/builtin_attributes.cmo)
    (.ocamlcommon.objs/byte/builtin_attributes.cmt as compiler-libs/builtin_attributes.cmt)
    (.ocamlcommon.objs/byte/builtin_attributes.cmti as compiler-libs/builtin_attributes.cmti)
    (.ocamlcommon.objs/byte/bytesections.cmi as compiler-libs/bytesections.cmi)
    (.ocamlcommon.objs/byte/bytesections.cmo as compiler-libs/bytesections.cmo)
    (.ocamlcommon.objs/byte/bytesections.cmt as compiler-libs/bytesections.cmt)
    (.ocamlcommon.objs/byte/bytesections.cmti as compiler-libs/bytesections.cmti)
    (.ocamlcommon.objs/byte/camlinternalMenhirLib.cmi as
      compiler-libs/camlinternalMenhirLib.cmi)
    (.ocamlcommon.objs/byte/camlinternalMenhirLib.cmo as
      compiler-libs/camlinternalMenhirLib.cmo)
    (.ocamlcommon.objs/byte/camlinternalMenhirLib.cmt as
      compiler-libs/camlinternalMenhirLib.cmt)
    (.ocamlcommon.objs/byte/camlinternalMenhirLib.cmti as
      compiler-libs/camlinternalMenhirLib.cmti)
    (.ocamlcommon.objs/byte/ccomp.cmi as compiler-libs/ccomp.cmi)
    (.ocamlcommon.objs/byte/ccomp.cmo as compiler-libs/ccomp.cmo)
    (.ocamlcommon.objs/byte/ccomp.cmt as compiler-libs/ccomp.cmt)
    (.ocamlcommon.objs/byte/ccomp.cmti as compiler-libs/ccomp.cmti)
    (.ocamlcommon.objs/byte/clflags.cmi as compiler-libs/clflags.cmi)
    (.ocamlcommon.objs/byte/clflags.cmo as compiler-libs/clflags.cmo)
    (.ocamlcommon.objs/byte/clflags.cmt as compiler-libs/clflags.cmt)
    (.ocamlcommon.objs/byte/clflags.cmti as compiler-libs/clflags.cmti)
    (.ocamlcommon.objs/byte/cmi_format.cmi as compiler-libs/cmi_format.cmi)
    (.ocamlcommon.objs/byte/cmi_format.cmo as compiler-libs/cmi_format.cmo)
    (.ocamlcommon.objs/byte/cmi_format.cmt as compiler-libs/cmi_format.cmt)
    (.ocamlcommon.objs/byte/cmi_format.cmti as compiler-libs/cmi_format.cmti)
    (.ocamlcommon.objs/byte/cmo_format.cmi as compiler-libs/cmo_format.cmi)
    (.ocamlcommon.objs/byte/cmo_format.cmti as compiler-libs/cmo_format.cmti)
    (.ocamlcommon.objs/byte/cmt2annot.cmi as compiler-libs/cmt2annot.cmi)
    (.ocamlcommon.objs/byte/cmt2annot.cmo as compiler-libs/cmt2annot.cmo)
    (.ocamlcommon.objs/byte/cmt2annot.cmt as compiler-libs/cmt2annot.cmt)
    (.ocamlcommon.objs/byte/cmt_format.cmi as compiler-libs/cmt_format.cmi)
    (.ocamlcommon.objs/byte/cmt_format.cmo as compiler-libs/cmt_format.cmo)
    (.ocamlcommon.objs/byte/cmt_format.cmt as compiler-libs/cmt_format.cmt)
    (.ocamlcommon.objs/byte/cmt_format.cmti as compiler-libs/cmt_format.cmti)
    (.ocamlcommon.objs/byte/compenv.cmi as compiler-libs/compenv.cmi)
    (.ocamlcommon.objs/byte/compenv.cmo as compiler-libs/compenv.cmo)
    (.ocamlcommon.objs/byte/compenv.cmt as compiler-libs/compenv.cmt)
    (.ocamlcommon.objs/byte/compenv.cmti as compiler-libs/compenv.cmti)
    (.ocamlcommon.objs/byte/compile_common.cmi as compiler-libs/compile_common.cmi)
    (.ocamlcommon.objs/byte/compile_common.cmo as compiler-libs/compile_common.cmo)
    (.ocamlcommon.objs/byte/compile_common.cmt as compiler-libs/compile_common.cmt)
    (.ocamlcommon.objs/byte/compile_common.cmti as compiler-libs/compile_common.cmti)
    (.ocamlcommon.objs/byte/compmisc.cmi as compiler-libs/compmisc.cmi)
    (.ocamlcommon.objs/byte/compmisc.cmo as compiler-libs/compmisc.cmo)
    (.ocamlcommon.objs/byte/compmisc.cmt as compiler-libs/compmisc.cmt)
    (.ocamlcommon.objs/byte/compmisc.cmti as compiler-libs/compmisc.cmti)
    (.ocamlcommon.objs/byte/config.cmi as compiler-libs/config.cmi)
    (.ocamlcommon.objs/byte/config.cmo as compiler-libs/config.cmo)
    (.ocamlcommon.objs/byte/config.cmt as compiler-libs/config.cmt)
    (.ocamlcommon.objs/byte/config.cmti as compiler-libs/config.cmti)
    (.ocamlcommon.objs/byte/consistbl.cmi as compiler-libs/consistbl.cmi)
    (.ocamlcommon.objs/byte/consistbl.cmo as compiler-libs/consistbl.cmo)
    (.ocamlcommon.objs/byte/consistbl.cmt as compiler-libs/consistbl.cmt)
    (.ocamlcommon.objs/byte/consistbl.cmti as compiler-libs/consistbl.cmti)
    (.ocamlcommon.objs/byte/ctype.cmi as compiler-libs/ctype.cmi)
    (.ocamlcommon.objs/byte/ctype.cmo as compiler-libs/ctype.cmo)
    (.ocamlcommon.objs/byte/ctype.cmt as compiler-libs/ctype.cmt)
    (.ocamlcommon.objs/byte/ctype.cmti as compiler-libs/ctype.cmti)
    (.ocamlcommon.objs/byte/datarepr.cmi as compiler-libs/datarepr.cmi)
    (.ocamlcommon.objs/byte/datarepr.cmo as compiler-libs/datarepr.cmo)
    (.ocamlcommon.objs/byte/datarepr.cmt as compiler-libs/datarepr.cmt)
    (.ocamlcommon.objs/byte/datarepr.cmti as compiler-libs/datarepr.cmti)
    (.ocamlcommon.objs/byte/debug_event.cmi as compiler-libs/debug_event.cmi)
    (.ocamlcommon.objs/byte/debug_event.cmti as compiler-libs/debug_event.cmti)
    (.ocamlcommon.objs/byte/debuginfo.cmi as compiler-libs/debuginfo.cmi)
    (.ocamlcommon.objs/byte/debuginfo.cmo as compiler-libs/debuginfo.cmo)
    (.ocamlcommon.objs/byte/debuginfo.cmt as compiler-libs/debuginfo.cmt)
    (.ocamlcommon.objs/byte/debuginfo.cmti as compiler-libs/debuginfo.cmti)
    (.ocamlcommon.objs/byte/depend.cmi as compiler-libs/depend.cmi)
    (.ocamlcommon.objs/byte/depend.cmo as compiler-libs/depend.cmo)
    (.ocamlcommon.objs/byte/depend.cmt as compiler-libs/depend.cmt)
    (.ocamlcommon.objs/byte/depend.cmti as compiler-libs/depend.cmti)
    (.ocamlcommon.objs/byte/dll.cmi as compiler-libs/dll.cmi)
    (.ocamlcommon.objs/byte/dll.cmo as compiler-libs/dll.cmo)
    (.ocamlcommon.objs/byte/dll.cmt as compiler-libs/dll.cmt)
    (.ocamlcommon.objs/byte/dll.cmti as compiler-libs/dll.cmti)
    (.ocamlcommon.objs/byte/docstrings.cmi as compiler-libs/docstrings.cmi)
    (.ocamlcommon.objs/byte/docstrings.cmo as compiler-libs/docstrings.cmo)
    (.ocamlcommon.objs/byte/docstrings.cmt as compiler-libs/docstrings.cmt)
    (.ocamlcommon.objs/byte/docstrings.cmti as compiler-libs/docstrings.cmti)
    (.ocamlcommon.objs/byte/domainstate.cmi as compiler-libs/domainstate.cmi)
    (.ocamlcommon.objs/byte/domainstate.cmo as compiler-libs/domainstate.cmo)
    (.ocamlcommon.objs/byte/domainstate.cmt as compiler-libs/domainstate.cmt)
    (.ocamlcommon.objs/byte/domainstate.cmti as compiler-libs/domainstate.cmti)
    (.ocamlcommon.objs/byte/env.cmi as compiler-libs/env.cmi)
    (.ocamlcommon.objs/byte/env.cmo as compiler-libs/env.cmo)
    (.ocamlcommon.objs/byte/env.cmt as compiler-libs/env.cmt)
    (.ocamlcommon.objs/byte/env.cmti as compiler-libs/env.cmti)
    (.ocamlcommon.objs/byte/envaux.cmi as compiler-libs/envaux.cmi)
    (.ocamlcommon.objs/byte/envaux.cmo as compiler-libs/envaux.cmo)
    (.ocamlcommon.objs/byte/envaux.cmt as compiler-libs/envaux.cmt)
    (.ocamlcommon.objs/byte/envaux.cmti as compiler-libs/envaux.cmti)
    (.ocamlcommon.objs/byte/ident.cmi as compiler-libs/ident.cmi)
    (.ocamlcommon.objs/byte/ident.cmo as compiler-libs/ident.cmo)
    (.ocamlcommon.objs/byte/ident.cmt as compiler-libs/ident.cmt)
    (.ocamlcommon.objs/byte/ident.cmti as compiler-libs/ident.cmti)
    (.ocamlcommon.objs/byte/identifiable.cmi as compiler-libs/identifiable.cmi)
    (.ocamlcommon.objs/byte/identifiable.cmo as compiler-libs/identifiable.cmo)
    (.ocamlcommon.objs/byte/identifiable.cmt as compiler-libs/identifiable.cmt)
    (.ocamlcommon.objs/byte/identifiable.cmti as compiler-libs/identifiable.cmti)
    (.ocamlcommon.objs/byte/includeclass.cmi as compiler-libs/includeclass.cmi)
    (.ocamlcommon.objs/byte/includeclass.cmo as compiler-libs/includeclass.cmo)
    (.ocamlcommon.objs/byte/includeclass.cmt as compiler-libs/includeclass.cmt)
    (.ocamlcommon.objs/byte/includeclass.cmti as compiler-libs/includeclass.cmti)
    (.ocamlcommon.objs/byte/includecore.cmi as compiler-libs/includecore.cmi)
    (.ocamlcommon.objs/byte/includecore.cmo as compiler-libs/includecore.cmo)
    (.ocamlcommon.objs/byte/includecore.cmt as compiler-libs/includecore.cmt)
    (.ocamlcommon.objs/byte/includecore.cmti as compiler-libs/includecore.cmti)
    (.ocamlcommon.objs/byte/includemod.cmi as compiler-libs/includemod.cmi)
    (.ocamlcommon.objs/byte/includemod.cmo as compiler-libs/includemod.cmo)
    (.ocamlcommon.objs/byte/includemod.cmt as compiler-libs/includemod.cmt)
    (.ocamlcommon.objs/byte/includemod.cmti as compiler-libs/includemod.cmti)
    (.ocamlcommon.objs/byte/int_replace_polymorphic_compare.cmi as compiler-libs/int_replace_polymorphic_compare.cmi)
    (.ocamlcommon.objs/byte/int_replace_polymorphic_compare.cmo as compiler-libs/int_replace_polymorphic_compare.cmo)
    (.ocamlcommon.objs/byte/int_replace_polymorphic_compare.cmt as compiler-libs/int_replace_polymorphic_compare.cmt)
    (.ocamlcommon.objs/byte/int_replace_polymorphic_compare.cmti as compiler-libs/int_replace_polymorphic_compare.cmti)
    (.ocamlcommon.objs/byte/lambda.cmi as compiler-libs/lambda.cmi)
    (.ocamlcommon.objs/byte/lambda.cmo as compiler-libs/lambda.cmo)
    (.ocamlcommon.objs/byte/lambda.cmt as compiler-libs/lambda.cmt)
    (.ocamlcommon.objs/byte/lambda.cmti as compiler-libs/lambda.cmti)
    (.ocamlcommon.objs/byte/lexer.cmi as compiler-libs/lexer.cmi)
    (.ocamlcommon.objs/byte/lexer.cmo as compiler-libs/lexer.cmo)
    (.ocamlcommon.objs/byte/lexer.cmt as compiler-libs/lexer.cmt)
    (.ocamlcommon.objs/byte/lexer.cmti as compiler-libs/lexer.cmti)
    (.ocamlcommon.objs/byte/load_path.cmi as compiler-libs/load_path.cmi)
    (.ocamlcommon.objs/byte/load_path.cmo as compiler-libs/load_path.cmo)
    (.ocamlcommon.objs/byte/load_path.cmt as compiler-libs/load_path.cmt)
    (.ocamlcommon.objs/byte/load_path.cmti as compiler-libs/load_path.cmti)
    (.ocamlcommon.objs/byte/location.cmi as compiler-libs/location.cmi)
    (.ocamlcommon.objs/byte/location.cmo as compiler-libs/location.cmo)
    (.ocamlcommon.objs/byte/location.cmt as compiler-libs/location.cmt)
    (.ocamlcommon.objs/byte/location.cmti as compiler-libs/location.cmti)
    (.ocamlcommon.objs/byte/longident.cmi as compiler-libs/longident.cmi)
    (.ocamlcommon.objs/byte/longident.cmo as compiler-libs/longident.cmo)
    (.ocamlcommon.objs/byte/longident.cmt as compiler-libs/longident.cmt)
    (.ocamlcommon.objs/byte/longident.cmti as compiler-libs/longident.cmti)
    (.ocamlcommon.objs/byte/main_args.cmi as compiler-libs/main_args.cmi)
    (.ocamlcommon.objs/byte/main_args.cmo as compiler-libs/main_args.cmo)
    (.ocamlcommon.objs/byte/main_args.cmt as compiler-libs/main_args.cmt)
    (.ocamlcommon.objs/byte/main_args.cmti as compiler-libs/main_args.cmti)
    (.ocamlcommon.objs/byte/makedepend.cmi as compiler-libs/makedepend.cmi)
    (.ocamlcommon.objs/byte/makedepend.cmo as compiler-libs/makedepend.cmo)
    (.ocamlcommon.objs/byte/makedepend.cmt as compiler-libs/makedepend.cmt)
    (.ocamlcommon.objs/byte/makedepend.cmti as compiler-libs/makedepend.cmti)
    (.ocamlcommon.objs/byte/matching.cmi as compiler-libs/matching.cmi)
    (.ocamlcommon.objs/byte/matching.cmo as compiler-libs/matching.cmo)
    (.ocamlcommon.objs/byte/matching.cmt as compiler-libs/matching.cmt)
    (.ocamlcommon.objs/byte/matching.cmti as compiler-libs/matching.cmti)
    (.ocamlcommon.objs/byte/meta.cmi as compiler-libs/meta.cmi)
    (.ocamlcommon.objs/byte/meta.cmo as compiler-libs/meta.cmo)
    (.ocamlcommon.objs/byte/meta.cmt as compiler-libs/meta.cmt)
    (.ocamlcommon.objs/byte/meta.cmti as compiler-libs/meta.cmti)
    (.ocamlcommon.objs/byte/misc.cmi as compiler-libs/misc.cmi)
    (.ocamlcommon.objs/byte/misc.cmo as compiler-libs/misc.cmo)
    (.ocamlcommon.objs/byte/misc.cmt as compiler-libs/misc.cmt)
    (.ocamlcommon.objs/byte/misc.cmti as compiler-libs/misc.cmti)
    (.ocamlcommon.objs/byte/mtype.cmi as compiler-libs/mtype.cmi)
    (.ocamlcommon.objs/byte/mtype.cmo as compiler-libs/mtype.cmo)
    (.ocamlcommon.objs/byte/mtype.cmt as compiler-libs/mtype.cmt)
    (.ocamlcommon.objs/byte/mtype.cmti as compiler-libs/mtype.cmti)
    (.ocamlcommon.objs/byte/numbers.cmi as compiler-libs/numbers.cmi)
    (.ocamlcommon.objs/byte/numbers.cmo as compiler-libs/numbers.cmo)
    (.ocamlcommon.objs/byte/numbers.cmt as compiler-libs/numbers.cmt)
    (.ocamlcommon.objs/byte/numbers.cmti as compiler-libs/numbers.cmti)
    (.ocamlcommon.objs/byte/opcodes.cmi as compiler-libs/opcodes.cmi)
    (.ocamlcommon.objs/byte/opcodes.cmo as compiler-libs/opcodes.cmo)
    (.ocamlcommon.objs/byte/opcodes.cmt as compiler-libs/opcodes.cmt)

    ; Why is there no rule for opcodes.cmti?

    (.ocamlcommon.objs/byte/oprint.cmi as compiler-libs/oprint.cmi)
    (.ocamlcommon.objs/byte/oprint.cmo as compiler-libs/oprint.cmo)
    (.ocamlcommon.objs/byte/oprint.cmt as compiler-libs/oprint.cmt)
    (.ocamlcommon.objs/byte/oprint.cmti as compiler-libs/oprint.cmti)
    (.ocamlcommon.objs/byte/outcometree.cmi as compiler-libs/outcometree.cmi)
    (.ocamlcommon.objs/byte/outcometree.cmti as compiler-libs/outcometree.cmti)
    (.ocamlcommon.objs/byte/parmatch.cmi as compiler-libs/parmatch.cmi)
    (.ocamlcommon.objs/byte/parmatch.cmo as compiler-libs/parmatch.cmo)
    (.ocamlcommon.objs/byte/parmatch.cmt as compiler-libs/parmatch.cmt)
    (.ocamlcommon.objs/byte/parmatch.cmti as compiler-libs/parmatch.cmti)
    (.ocamlcommon.objs/byte/parse.cmi as compiler-libs/parse.cmi)
    (.ocamlcommon.objs/byte/parse.cmo as compiler-libs/parse.cmo)
    (.ocamlcommon.objs/byte/parse.cmt as compiler-libs/parse.cmt)
    (.ocamlcommon.objs/byte/parse.cmti as compiler-libs/parse.cmti)
    (.ocamlcommon.objs/byte/parser.cmi as compiler-libs/parser.cmi)
    (.ocamlcommon.objs/byte/parser.cmo as compiler-libs/parser.cmo)
    (.ocamlcommon.objs/byte/parser.cmt as compiler-libs/parser.cmt)
    (.ocamlcommon.objs/byte/parser.cmti as compiler-libs/parser.cmti)
    (.ocamlcommon.objs/byte/parsetree.cmi as compiler-libs/parsetree.cmi)
    (.ocamlcommon.objs/byte/parsetree.cmti as compiler-libs/parsetree.cmti)
    (.ocamlcommon.objs/byte/path.cmi as compiler-libs/path.cmi)
    (.ocamlcommon.objs/byte/path.cmo as compiler-libs/path.cmo)
    (.ocamlcommon.objs/byte/path.cmt as compiler-libs/path.cmt)
    (.ocamlcommon.objs/byte/path.cmti as compiler-libs/path.cmti)
    (.ocamlcommon.objs/byte/persistent_env.cmi as compiler-libs/persistent_env.cmi)
    (.ocamlcommon.objs/byte/persistent_env.cmo as compiler-libs/persistent_env.cmo)
    (.ocamlcommon.objs/byte/persistent_env.cmt as compiler-libs/persistent_env.cmt)
    (.ocamlcommon.objs/byte/persistent_env.cmti as compiler-libs/persistent_env.cmti)
    (.ocamlcommon.objs/byte/pparse.cmi as compiler-libs/pparse.cmi)
    (.ocamlcommon.objs/byte/pparse.cmo as compiler-libs/pparse.cmo)
    (.ocamlcommon.objs/byte/pparse.cmt as compiler-libs/pparse.cmt)
    (.ocamlcommon.objs/byte/pparse.cmti as compiler-libs/pparse.cmti)
    (.ocamlcommon.objs/byte/pprintast.cmi as compiler-libs/pprintast.cmi)
    (.ocamlcommon.objs/byte/pprintast.cmo as compiler-libs/pprintast.cmo)
    (.ocamlcommon.objs/byte/pprintast.cmt as compiler-libs/pprintast.cmt)
    (.ocamlcommon.objs/byte/pprintast.cmti as compiler-libs/pprintast.cmti)
    (.ocamlcommon.objs/byte/predef.cmi as compiler-libs/predef.cmi)
    (.ocamlcommon.objs/byte/predef.cmo as compiler-libs/predef.cmo)
    (.ocamlcommon.objs/byte/predef.cmt as compiler-libs/predef.cmt)
    (.ocamlcommon.objs/byte/predef.cmti as compiler-libs/predef.cmti)
    (.ocamlcommon.objs/byte/primitive.cmi as compiler-libs/primitive.cmi)
    (.ocamlcommon.objs/byte/primitive.cmo as compiler-libs/primitive.cmo)
    (.ocamlcommon.objs/byte/primitive.cmt as compiler-libs/primitive.cmt)
    (.ocamlcommon.objs/byte/primitive.cmti as compiler-libs/primitive.cmti)
    (.ocamlcommon.objs/byte/printast.cmi as compiler-libs/printast.cmi)
    (.ocamlcommon.objs/byte/printast.cmo as compiler-libs/printast.cmo)
    (.ocamlcommon.objs/byte/printast.cmt as compiler-libs/printast.cmt)
    (.ocamlcommon.objs/byte/printast.cmti as compiler-libs/printast.cmti)
    (.ocamlcommon.objs/byte/printlambda.cmi as compiler-libs/printlambda.cmi)
    (.ocamlcommon.objs/byte/printlambda.cmo as compiler-libs/printlambda.cmo)
    (.ocamlcommon.objs/byte/printlambda.cmt as compiler-libs/printlambda.cmt)
    (.ocamlcommon.objs/byte/printlambda.cmti as compiler-libs/printlambda.cmti)
    (.ocamlcommon.objs/byte/printpat.cmi as compiler-libs/printpat.cmi)
    (.ocamlcommon.objs/byte/printpat.cmo as compiler-libs/printpat.cmo)
    (.ocamlcommon.objs/byte/printpat.cmt as compiler-libs/printpat.cmt)
    (.ocamlcommon.objs/byte/printpat.cmti as compiler-libs/printpat.cmti)
    (.ocamlcommon.objs/byte/printtyp.cmi as compiler-libs/printtyp.cmi)
    (.ocamlcommon.objs/byte/printtyp.cmo as compiler-libs/printtyp.cmo)
    (.ocamlcommon.objs/byte/printtyp.cmt as compiler-libs/printtyp.cmt)
    (.ocamlcommon.objs/byte/printtyp.cmti as compiler-libs/printtyp.cmti)
    (.ocamlcommon.objs/byte/printtyped.cmi as compiler-libs/printtyped.cmi)
    (.ocamlcommon.objs/byte/printtyped.cmo as compiler-libs/printtyped.cmo)
    (.ocamlcommon.objs/byte/printtyped.cmt as compiler-libs/printtyped.cmt)
    (.ocamlcommon.objs/byte/printtyped.cmti as compiler-libs/printtyped.cmti)
    (.ocamlcommon.objs/byte/profile.cmi as compiler-libs/profile.cmi)
    (.ocamlcommon.objs/byte/profile.cmo as compiler-libs/profile.cmo)
    (.ocamlcommon.objs/byte/profile.cmt as compiler-libs/profile.cmt)
    (.ocamlcommon.objs/byte/profile.cmti as compiler-libs/profile.cmti)
    (.ocamlcommon.objs/byte/rec_check.cmi as compiler-libs/rec_check.cmi)
    (.ocamlcommon.objs/byte/rec_check.cmo as compiler-libs/rec_check.cmo)
    (.ocamlcommon.objs/byte/rec_check.cmt as compiler-libs/rec_check.cmt)
    (.ocamlcommon.objs/byte/rec_check.cmti as compiler-libs/rec_check.cmti)
    (.ocamlcommon.objs/byte/runtimedef.cmi as compiler-libs/runtimedef.cmi)
    (.ocamlcommon.objs/byte/runtimedef.cmo as compiler-libs/runtimedef.cmo)
    (.ocamlcommon.objs/byte/runtimedef.cmt as compiler-libs/runtimedef.cmt)
    (.ocamlcommon.objs/byte/runtimedef.cmti as compiler-libs/runtimedef.cmti)
    (.ocamlcommon.objs/byte/simplif.cmi as compiler-libs/simplif.cmi)
    (.ocamlcommon.objs/byte/simplif.cmo as compiler-libs/simplif.cmo)
    (.ocamlcommon.objs/byte/simplif.cmt as compiler-libs/simplif.cmt)
    (.ocamlcommon.objs/byte/simplif.cmti as compiler-libs/simplif.cmti)
    (.ocamlcommon.objs/byte/strongly_connected_components.cmi as compiler-libs/strongly_connected_components.cmi)
    (.ocamlcommon.objs/byte/strongly_connected_components.cmo as compiler-libs/strongly_connected_components.cmo)
    (.ocamlcommon.objs/byte/strongly_connected_components.cmt as compiler-libs/strongly_connected_components.cmt)
    (.ocamlcommon.objs/byte/strongly_connected_components.cmti as compiler-libs/strongly_connected_components.cmti)
    (.ocamlcommon.objs/byte/stypes.cmi as compiler-libs/stypes.cmi)
    (.ocamlcommon.objs/byte/stypes.cmo as compiler-libs/stypes.cmo)
    (.ocamlcommon.objs/byte/stypes.cmt as compiler-libs/stypes.cmt)
    (.ocamlcommon.objs/byte/stypes.cmti as compiler-libs/stypes.cmti)
    (.ocamlcommon.objs/byte/subst.cmi as compiler-libs/subst.cmi)
    (.ocamlcommon.objs/byte/subst.cmo as compiler-libs/subst.cmo)
    (.ocamlcommon.objs/byte/subst.cmt as compiler-libs/subst.cmt)
    (.ocamlcommon.objs/byte/subst.cmti as compiler-libs/subst.cmti)
    (.ocamlcommon.objs/byte/switch.cmi as compiler-libs/switch.cmi)
    (.ocamlcommon.objs/byte/switch.cmo as compiler-libs/switch.cmo)
    (.ocamlcommon.objs/byte/switch.cmt as compiler-libs/switch.cmt)
    (.ocamlcommon.objs/byte/switch.cmti as compiler-libs/switch.cmti)
    (.ocamlcommon.objs/byte/symtable.cmi as compiler-libs/symtable.cmi)
    (.ocamlcommon.objs/byte/symtable.cmo as compiler-libs/symtable.cmo)
    (.ocamlcommon.objs/byte/symtable.cmt as compiler-libs/symtable.cmt)
    (.ocamlcommon.objs/byte/symtable.cmti as compiler-libs/symtable.cmti)
    (.ocamlcommon.objs/byte/syntaxerr.cmi as compiler-libs/syntaxerr.cmi)
    (.ocamlcommon.objs/byte/syntaxerr.cmo as compiler-libs/syntaxerr.cmo)
    (.ocamlcommon.objs/byte/syntaxerr.cmt as compiler-libs/syntaxerr.cmt)
    (.ocamlcommon.objs/byte/syntaxerr.cmti as compiler-libs/syntaxerr.cmti)
    (.ocamlcommon.objs/byte/targetint.cmi as compiler-libs/targetint.cmi)
    (.ocamlcommon.objs/byte/targetint.cmo as compiler-libs/targetint.cmo)
    (.ocamlcommon.objs/byte/targetint.cmt as compiler-libs/targetint.cmt)
    (.ocamlcommon.objs/byte/targetint.cmti as compiler-libs/targetint.cmti)
    (.ocamlcommon.objs/byte/tast_iterator.cmi as compiler-libs/tast_iterator.cmi)
    (.ocamlcommon.objs/byte/tast_iterator.cmo as compiler-libs/tast_iterator.cmo)
    (.ocamlcommon.objs/byte/tast_iterator.cmt as compiler-libs/tast_iterator.cmt)
    (.ocamlcommon.objs/byte/tast_iterator.cmti as compiler-libs/tast_iterator.cmti)
    (.ocamlcommon.objs/byte/tast_mapper.cmi as compiler-libs/tast_mapper.cmi)
    (.ocamlcommon.objs/byte/tast_mapper.cmo as compiler-libs/tast_mapper.cmo)
    (.ocamlcommon.objs/byte/tast_mapper.cmt as compiler-libs/tast_mapper.cmt)
    (.ocamlcommon.objs/byte/tast_mapper.cmti as compiler-libs/tast_mapper.cmti)
    (.ocamlcommon.objs/byte/terminfo.cmi as compiler-libs/terminfo.cmi)
    (.ocamlcommon.objs/byte/terminfo.cmo as compiler-libs/terminfo.cmo)
    (.ocamlcommon.objs/byte/terminfo.cmt as compiler-libs/terminfo.cmt)
    (.ocamlcommon.objs/byte/terminfo.cmti as compiler-libs/terminfo.cmti)
    (.ocamlcommon.objs/byte/translattribute.cmi as compiler-libs/translattribute.cmi)
    (.ocamlcommon.objs/byte/translattribute.cmo as compiler-libs/translattribute.cmo)
    (.ocamlcommon.objs/byte/translattribute.cmt as compiler-libs/translattribute.cmt)
    (.ocamlcommon.objs/byte/translattribute.cmti as compiler-libs/translattribute.cmti)
    (.ocamlcommon.objs/byte/translclass.cmi as compiler-libs/translclass.cmi)
    (.ocamlcommon.objs/byte/translclass.cmo as compiler-libs/translclass.cmo)
    (.ocamlcommon.objs/byte/translclass.cmt as compiler-libs/translclass.cmt)
    (.ocamlcommon.objs/byte/translclass.cmti as compiler-libs/translclass.cmti)
    (.ocamlcommon.objs/byte/translcore.cmi as compiler-libs/translcore.cmi)
    (.ocamlcommon.objs/byte/translcore.cmo as compiler-libs/translcore.cmo)
    (.ocamlcommon.objs/byte/translcore.cmt as compiler-libs/translcore.cmt)
    (.ocamlcommon.objs/byte/translcore.cmti as compiler-libs/translcore.cmti)
    (.ocamlcommon.objs/byte/translmod.cmi as compiler-libs/translmod.cmi)
    (.ocamlcommon.objs/byte/translmod.cmo as compiler-libs/translmod.cmo)
    (.ocamlcommon.objs/byte/translmod.cmt as compiler-libs/translmod.cmt)
    (.ocamlcommon.objs/byte/translmod.cmti as compiler-libs/translmod.cmti)
    (.ocamlcommon.objs/byte/translobj.cmi as compiler-libs/translobj.cmi)
    (.ocamlcommon.objs/byte/translobj.cmo as compiler-libs/translobj.cmo)
    (.ocamlcommon.objs/byte/translobj.cmt as compiler-libs/translobj.cmt)
    (.ocamlcommon.objs/byte/translobj.cmti as compiler-libs/translobj.cmti)
    (.ocamlcommon.objs/byte/translprim.cmi as compiler-libs/translprim.cmi)
    (.ocamlcommon.objs/byte/translprim.cmo as compiler-libs/translprim.cmo)
    (.ocamlcommon.objs/byte/translprim.cmt as compiler-libs/translprim.cmt)
    (.ocamlcommon.objs/byte/translprim.cmti as compiler-libs/translprim.cmti)
    (.ocamlcommon.objs/byte/type_immediacy.cmi as compiler-libs/type_immediacy.cmi)
    (.ocamlcommon.objs/byte/type_immediacy.cmo as compiler-libs/type_immediacy.cmo)
    (.ocamlcommon.objs/byte/type_immediacy.cmt as compiler-libs/type_immediacy.cmt)
    (.ocamlcommon.objs/byte/type_immediacy.cmti as compiler-libs/type_immediacy.cmti)
    (.ocamlcommon.objs/byte/typeclass.cmi as compiler-libs/typeclass.cmi)
    (.ocamlcommon.objs/byte/typeclass.cmo as compiler-libs/typeclass.cmo)
    (.ocamlcommon.objs/byte/typeclass.cmt as compiler-libs/typeclass.cmt)
    (.ocamlcommon.objs/byte/typeclass.cmti as compiler-libs/typeclass.cmti)
    (.ocamlcommon.objs/byte/typecore.cmi as compiler-libs/typecore.cmi)
    (.ocamlcommon.objs/byte/typecore.cmo as compiler-libs/typecore.cmo)
    (.ocamlcommon.objs/byte/typecore.cmt as compiler-libs/typecore.cmt)
    (.ocamlcommon.objs/byte/typecore.cmti as compiler-libs/typecore.cmti)
    (.ocamlcommon.objs/byte/typedecl.cmi as compiler-libs/typedecl.cmi)
    (.ocamlcommon.objs/byte/typedecl.cmo as compiler-libs/typedecl.cmo)
    (.ocamlcommon.objs/byte/typedecl.cmt as compiler-libs/typedecl.cmt)
    (.ocamlcommon.objs/byte/typedecl.cmti as compiler-libs/typedecl.cmti)
    (.ocamlcommon.objs/byte/typedecl_immediacy.cmi as compiler-libs/typedecl_immediacy.cmi)
    (.ocamlcommon.objs/byte/typedecl_immediacy.cmo as compiler-libs/typedecl_immediacy.cmo)
    (.ocamlcommon.objs/byte/typedecl_immediacy.cmt as compiler-libs/typedecl_immediacy.cmt)
    (.ocamlcommon.objs/byte/typedecl_immediacy.cmti as compiler-libs/typedecl_immediacy.cmti)
    (.ocamlcommon.objs/byte/typedecl_properties.cmi as compiler-libs/typedecl_properties.cmi)
    (.ocamlcommon.objs/byte/typedecl_properties.cmo as compiler-libs/typedecl_properties.cmo)
    (.ocamlcommon.objs/byte/typedecl_properties.cmt as compiler-libs/typedecl_properties.cmt)
    (.ocamlcommon.objs/byte/typedecl_properties.cmti as compiler-libs/typedecl_properties.cmti)
    (.ocamlcommon.objs/byte/typedecl_separability.cmi as compiler-libs/typedecl_separability.cmi)
    (.ocamlcommon.objs/byte/typedecl_separability.cmo as compiler-libs/typedecl_separability.cmo)
    (.ocamlcommon.objs/byte/typedecl_separability.cmt as compiler-libs/typedecl_separability.cmt)
    (.ocamlcommon.objs/byte/typedecl_separability.cmti as compiler-libs/typedecl_separability.cmti)
    (.ocamlcommon.objs/byte/typedecl_unboxed.cmi as compiler-libs/typedecl_unboxed.cmi)
    (.ocamlcommon.objs/byte/typedecl_unboxed.cmo as compiler-libs/typedecl_unboxed.cmo)
    (.ocamlcommon.objs/byte/typedecl_unboxed.cmt as compiler-libs/typedecl_unboxed.cmt)
    (.ocamlcommon.objs/byte/typedecl_unboxed.cmti as compiler-libs/typedecl_unboxed.cmti)
    (.ocamlcommon.objs/byte/typedecl_variance.cmi as compiler-libs/typedecl_variance.cmi)
    (.ocamlcommon.objs/byte/typedecl_variance.cmo as compiler-libs/typedecl_variance.cmo)
    (.ocamlcommon.objs/byte/typedecl_variance.cmt as compiler-libs/typedecl_variance.cmt)
    (.ocamlcommon.objs/byte/typedecl_variance.cmti as compiler-libs/typedecl_variance.cmti)
    (.ocamlcommon.objs/byte/typedtree.cmi as compiler-libs/typedtree.cmi)
    (.ocamlcommon.objs/byte/typedtree.cmo as compiler-libs/typedtree.cmo)
    (.ocamlcommon.objs/byte/typedtree.cmt as compiler-libs/typedtree.cmt)
    (.ocamlcommon.objs/byte/typedtree.cmti as compiler-libs/typedtree.cmti)
    (.ocamlcommon.objs/byte/typemod.cmi as compiler-libs/typemod.cmi)
    (.ocamlcommon.objs/byte/typemod.cmo as compiler-libs/typemod.cmo)
    (.ocamlcommon.objs/byte/typemod.cmt as compiler-libs/typemod.cmt)
    (.ocamlcommon.objs/byte/typemod.cmti as compiler-libs/typemod.cmti)
    (.ocamlcommon.objs/byte/typeopt.cmi as compiler-libs/typeopt.cmi)
    (.ocamlcommon.objs/byte/typeopt.cmo as compiler-libs/typeopt.cmo)
    (.ocamlcommon.objs/byte/typeopt.cmt as compiler-libs/typeopt.cmt)
    (.ocamlcommon.objs/byte/typeopt.cmti as compiler-libs/typeopt.cmti)
    (.ocamlcommon.objs/byte/types.cmi as compiler-libs/types.cmi)
    (.ocamlcommon.objs/byte/types.cmo as compiler-libs/types.cmo)
    (.ocamlcommon.objs/byte/types.cmt as compiler-libs/types.cmt)
    (.ocamlcommon.objs/byte/types.cmti as compiler-libs/types.cmti)
    (.ocamlcommon.objs/byte/typetexp.cmi as compiler-libs/typetexp.cmi)
    (.ocamlcommon.objs/byte/typetexp.cmo as compiler-libs/typetexp.cmo)
    (.ocamlcommon.objs/byte/typetexp.cmt as compiler-libs/typetexp.cmt)
    (.ocamlcommon.objs/byte/typetexp.cmti as compiler-libs/typetexp.cmti)
    (.ocamlcommon.objs/byte/untypeast.cmi as compiler-libs/untypeast.cmi)
    (.ocamlcommon.objs/byte/untypeast.cmo as compiler-libs/untypeast.cmo)
    (.ocamlcommon.objs/byte/untypeast.cmt as compiler-libs/untypeast.cmt)
    (.ocamlcommon.objs/byte/untypeast.cmti as compiler-libs/untypeast.cmti)
    (.ocamlcommon.objs/byte/warnings.cmi as compiler-libs/warnings.cmi)
    (.ocamlcommon.objs/byte/warnings.cmo as compiler-libs/warnings.cmo)
    (.ocamlcommon.objs/byte/warnings.cmt as compiler-libs/warnings.cmt)
    (.ocamlcommon.objs/byte/warnings.cmti as compiler-libs/warnings.cmti)
    (.ocamlcommon.objs/native/arg_helper.cmx as compiler-libs/arg_helper.cmx)
    (.ocamlcommon.objs/native/ast_helper.cmx as compiler-libs/ast_helper.cmx)
    (.ocamlcommon.objs/native/ast_invariants.cmx as compiler-libs/ast_invariants.cmx)
    (.ocamlcommon.objs/native/ast_iterator.cmx as compiler-libs/ast_iterator.cmx)
    (.ocamlcommon.objs/native/ast_mapper.cmx as compiler-libs/ast_mapper.cmx)
    (.ocamlcommon.objs/native/attr_helper.cmx as compiler-libs/attr_helper.cmx)
    (.ocamlcommon.objs/native/btype.cmx as compiler-libs/btype.cmx)
    (.ocamlcommon.objs/native/build_path_prefix_map.cmx as compiler-libs/build_path_prefix_map.cmx)
    (.ocamlcommon.objs/native/builtin_attributes.cmx as compiler-libs/builtin_attributes.cmx)
    (.ocamlcommon.objs/native/bytesections.cmx as compiler-libs/bytesections.cmx)
    (.ocamlcommon.objs/native/camlinternalMenhirLib.cmx
      as compiler-libs/camlinternalMenhirLib.cmx)
    (.ocamlcommon.objs/native/ccomp.cmx as compiler-libs/ccomp.cmx)
    (.ocamlcommon.objs/native/clflags.cmx as compiler-libs/clflags.cmx)
    (.ocamlcommon.objs/native/cmi_format.cmx as compiler-libs/cmi_format.cmx)
    (.ocamlcommon.objs/native/cmt2annot.cmx as compiler-libs/cmt2annot.cmx)
    (.ocamlcommon.objs/native/cmt_format.cmx as compiler-libs/cmt_format.cmx)
    (.ocamlcommon.objs/native/compenv.cmx as compiler-libs/compenv.cmx)
    (.ocamlcommon.objs/native/compile_common.cmx as compiler-libs/compile_common.cmx)
    (.ocamlcommon.objs/native/compmisc.cmx as compiler-libs/compmisc.cmx)
    (.ocamlcommon.objs/native/config.cmx as compiler-libs/config.cmx)
    (.ocamlcommon.objs/native/consistbl.cmx as compiler-libs/consistbl.cmx)
    (.ocamlcommon.objs/native/ctype.cmx as compiler-libs/ctype.cmx)
    (.ocamlcommon.objs/native/datarepr.cmx as compiler-libs/datarepr.cmx)
    (.ocamlcommon.objs/native/debuginfo.cmx as compiler-libs/debuginfo.cmx)
    (.ocamlcommon.objs/native/depend.cmx as compiler-libs/depend.cmx)
    (.ocamlcommon.objs/native/dll.cmx as compiler-libs/dll.cmx)
    (.ocamlcommon.objs/native/docstrings.cmx as compiler-libs/docstrings.cmx)
    (.ocamlcommon.objs/native/domainstate.cmx as compiler-libs/domainstate.cmx)
    (.ocamlcommon.objs/native/env.cmx as compiler-libs/env.cmx)
    (.ocamlcommon.objs/native/envaux.cmx as compiler-libs/envaux.cmx)
    (.ocamlcommon.objs/native/ident.cmx as compiler-libs/ident.cmx)
    (.ocamlcommon.objs/native/identifiable.cmx as compiler-libs/identifiable.cmx)
    (.ocamlcommon.objs/native/includeclass.cmx as compiler-libs/includeclass.cmx)
    (.ocamlcommon.objs/native/includecore.cmx as compiler-libs/includecore.cmx)
    (.ocamlcommon.objs/native/includemod.cmx as compiler-libs/includemod.cmx)
    (.ocamlcommon.objs/native/int_replace_polymorphic_compare.cmx as compiler-libs/int_replace_polymorphic_compare.cmx)
    (.ocamlcommon.objs/native/lambda.cmx as compiler-libs/lambda.cmx)
    (.ocamlcommon.objs/native/lexer.cmx as compiler-libs/lexer.cmx)
    (.ocamlcommon.objs/native/load_path.cmx as compiler-libs/load_path.cmx)
    (.ocamlcommon.objs/native/location.cmx as compiler-libs/location.cmx)
    (.ocamlcommon.objs/native/longident.cmx as compiler-libs/longident.cmx)
    (.ocamlcommon.objs/native/main_args.cmx as compiler-libs/main_args.cmx)
    (.ocamlcommon.objs/native/makedepend.cmx as compiler-libs/makedepend.cmx)
    (.ocamlcommon.objs/native/matching.cmx as compiler-libs/matching.cmx)
    (.ocamlcommon.objs/native/meta.cmx as compiler-libs/meta.cmx)
    (.ocamlcommon.objs/native/misc.cmx as compiler-libs/misc.cmx)
    (.ocamlcommon.objs/native/mtype.cmx as compiler-libs/mtype.cmx)
    (.ocamlcommon.objs/native/numbers.cmx as compiler-libs/numbers.cmx)
    (.ocamlcommon.objs/native/opcodes.cmx as compiler-libs/opcodes.cmx)
    (.ocamlcommon.objs/native/oprint.cmx as compiler-libs/oprint.cmx)
    (.ocamlcommon.objs/native/parmatch.cmx as compiler-libs/parmatch.cmx)
    (.ocamlcommon.objs/native/parse.cmx as compiler-libs/parse.cmx)
    (.ocamlcommon.objs/native/parser.cmx as compiler-libs/parser.cmx)
    (.ocamlcommon.objs/native/path.cmx as compiler-libs/path.cmx)
    (.ocamlcommon.objs/native/persistent_env.cmx as compiler-libs/persistent_env.cmx)
    (.ocamlcommon.objs/native/pparse.cmx as compiler-libs/pparse.cmx)
    (.ocamlcommon.objs/native/pprintast.cmx as compiler-libs/pprintast.cmx)
    (.ocamlcommon.objs/native/predef.cmx as compiler-libs/predef.cmx)
    (.ocamlcommon.objs/native/primitive.cmx as compiler-libs/primitive.cmx)
    (.ocamlcommon.objs/native/printast.cmx as compiler-libs/printast.cmx)
    (.ocamlcommon.objs/native/printlambda.cmx as compiler-libs/printlambda.cmx)
    (.ocamlcommon.objs/native/printpat.cmx as compiler-libs/printpat.cmx)
    (.ocamlcommon.objs/native/printtyp.cmx as compiler-libs/printtyp.cmx)
    (.ocamlcommon.objs/native/printtyped.cmx as compiler-libs/printtyped.cmx)
    (.ocamlcommon.objs/native/profile.cmx as compiler-libs/profile.cmx)
    (.ocamlcommon.objs/native/rec_check.cmx as compiler-libs/rec_check.cmx)
    (.ocamlcommon.objs/native/runtimedef.cmx as compiler-libs/runtimedef.cmx)
    (.ocamlcommon.objs/native/simplif.cmx as compiler-libs/simplif.cmx)
    (.ocamlcommon.objs/native/strongly_connected_components.cmx as compiler-libs/strongly_connected_components.cmx)
    (.ocamlcommon.objs/native/stypes.cmx as compiler-libs/stypes.cmx)
    (.ocamlcommon.objs/native/subst.cmx as compiler-libs/subst.cmx)
    (.ocamlcommon.objs/native/switch.cmx as compiler-libs/switch.cmx)
    (.ocamlcommon.objs/native/symtable.cmx as compiler-libs/symtable.cmx)
    (.ocamlcommon.objs/native/syntaxerr.cmx as compiler-libs/syntaxerr.cmx)
    (.ocamlcommon.objs/native/targetint.cmx as compiler-libs/targetint.cmx)
    (.ocamlcommon.objs/native/tast_iterator.cmx as compiler-libs/tast_iterator.cmx)
    (.ocamlcommon.objs/native/tast_mapper.cmx as compiler-libs/tast_mapper.cmx)
    (.ocamlcommon.objs/native/terminfo.cmx as compiler-libs/terminfo.cmx)
    (.ocamlcommon.objs/native/translattribute.cmx as compiler-libs/translattribute.cmx)
    (.ocamlcommon.objs/native/translclass.cmx as compiler-libs/translclass.cmx)
    (.ocamlcommon.objs/native/translcore.cmx as compiler-libs/translcore.cmx)
    (.ocamlcommon.objs/native/translmod.cmx as compiler-libs/translmod.cmx)
    (.ocamlcommon.objs/native/translobj.cmx as compiler-libs/translobj.cmx)
    (.ocamlcommon.objs/native/translprim.cmx as compiler-libs/translprim.cmx)
    (.ocamlcommon.objs/native/type_immediacy.cmx as compiler-libs/type_immediacy.cmx)
    (.ocamlcommon.objs/native/typeclass.cmx as compiler-libs/typeclass.cmx)
    (.ocamlcommon.objs/native/typecore.cmx as compiler-libs/typecore.cmx)
    (.ocamlcommon.objs/native/typedecl.cmx as compiler-libs/typedecl.cmx)
    (.ocamlcommon.objs/native/typedecl_immediacy.cmx as compiler-libs/typedecl_immediacy.cmx)
    (.ocamlcommon.objs/native/typedecl_properties.cmx as compiler-libs/typedecl_properties.cmx)
    (.ocamlcommon.objs/native/typedecl_separability.cmx as compiler-libs/typedecl_separability.cmx)
    (.ocamlcommon.objs/native/typedecl_unboxed.cmx as compiler-libs/typedecl_unboxed.cmx)
    (.ocamlcommon.objs/native/typedecl_variance.cmx as compiler-libs/typedecl_variance.cmx)
    (.ocamlcommon.objs/native/typedtree.cmx as compiler-libs/typedtree.cmx)
    (.ocamlcommon.objs/native/typemod.cmx as compiler-libs/typemod.cmx)
    (.ocamlcommon.objs/native/typeopt.cmx as compiler-libs/typeopt.cmx)
    (.ocamlcommon.objs/native/types.cmx as compiler-libs/types.cmx)
    (.ocamlcommon.objs/native/typetexp.cmx as compiler-libs/typetexp.cmx)
    (.ocamlcommon.objs/native/untypeast.cmx as compiler-libs/untypeast.cmx)
    (.ocamlcommon.objs/native/warnings.cmx as compiler-libs/warnings.cmx)
  ))
